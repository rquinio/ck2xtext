/**
 * Simple grammar generic to CK2 files
 * 
 * Note: 
 * - grammar namespace defines the java packages
 * - parent grammar is matched by naming convention in classpath, adding .xtext suffix
 */
grammar ck2xtext.generic.Ck2 with ck2xtext.common.Ck2Terminals

generate ck2 "http://www.crusaderkings.com" 

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model:
	(properties+= Property)+
;

ListElem returns ecore::EString : ID | STRING | Integer | Double;

/**
 * data = {0 0 0 3 0 2 2}
 * color = { 0.3 0.55 0.8 }
 */
List:
	'{' (elems+= ListElem)+ '}'
;

/**
 * Properties follow the pattern: propertyName = propertyValue
 */
Property:
	StringProperty |
	IdProperty |
	CommandProperty |
	BoolProperty |
	DateProperty |
	IntegerProperty |
	DoubleProperty |
	HexadecimalProperty |
	ListProperty |
	//NumericListProperty |
	Clause |
	ProbabilityProperty
;

/**
 * Complex/nested properties
 */
Clause:
	IdClauseProperty |
	IntClauseProperty |
	DateClauseProperty
;

/**
 * from_dynasty_prefix = "af "
 */
StringProperty:
	key=ID '=' value=STRING
;
/**
 * modifier = default_culture_modifier
 */
IdProperty:
	key=ID '=' value=ID
;
/**
 * portrait = [From.GetID]
 */
CommandProperty:
	key=ID '=' '[' value=ID ']'
;
/**
 * dukes_called_kings = yes
 */
BoolProperty:
	key=ID '=' value=BOOL
;

DateProperty:
	key=ID '=' value=Date
;
/**
 * year = 1000
 * Note: need to split int vs double, so that formatter doesn't add .0 to int
 */
IntegerProperty:
	key=ID '=' value=Integer |
	key=ID '==' value=Integer |
	key=ID '>=' value=Integer |
	key=ID '>' value=Integer |
	key=ID '<=' value=Integer |
	key=ID '<' value=Integer
;

/**
 * factor = 0.9
 */
DoubleProperty:
	key=ID '=' value=Double |
	key=ID '==' value=Double |
	key=ID '>=' value=Double |
	key=ID '>' value=Double |
	key=ID '<=' value=Double |
	key=ID '<' value=Double
;

/**
 * color = 0xff0000
 */
HexadecimalProperty:
	key=ID '=' value=HEX
;

/**
 * male_names = { Ale Alfr_Alf }
 */
ListProperty:
	key=ID '=' value=List
;

/**
 * option = { ... }
 */
IdClauseProperty:
	name=ID '=' value= '{' (properties+= Property)* '}'
;
/**
 * 123 = { ... }
 */
IntClauseProperty:
	name=INT '=' value= '{' (properties+= Property)* '}'
;
/**
 * 769.1.1 = { ... }
 */
DateClauseProperty:
	name=Date '=' value= '{' (properties+= Property)* '}'
;

/**
 * 100 = 4000
 * 100 = HL.10610
 */
ProbabilityProperty:
	key=INT '=' value=ListElem
;