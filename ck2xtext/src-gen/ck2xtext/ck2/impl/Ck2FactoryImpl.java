/**
 * generated by Xtext 2.9.1
 */
package ck2xtext.ck2.impl;

import ck2xtext.ck2.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class Ck2FactoryImpl extends EFactoryImpl implements Ck2Factory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static Ck2Factory init()
  {
    try
    {
      Ck2Factory theCk2Factory = (Ck2Factory)EPackage.Registry.INSTANCE.getEFactory(Ck2Package.eNS_URI);
      if (theCk2Factory != null)
      {
        return theCk2Factory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new Ck2FactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Ck2FactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case Ck2Package.MODEL: return createModel();
      case Ck2Package.LIST: return createList();
      case Ck2Package.PROPERTY: return createProperty();
      case Ck2Package.CLAUSE: return createClause();
      case Ck2Package.STRING_PROPERTY: return createStringProperty();
      case Ck2Package.ID_PROPERTY: return createIdProperty();
      case Ck2Package.COMMAND_PROPERTY: return createCommandProperty();
      case Ck2Package.BOOL_PROPERTY: return createBoolProperty();
      case Ck2Package.DATE_PROPERTY: return createDateProperty();
      case Ck2Package.INTEGER_PROPERTY: return createIntegerProperty();
      case Ck2Package.DOUBLE_PROPERTY: return createDoubleProperty();
      case Ck2Package.LIST_PROPERTY: return createListProperty();
      case Ck2Package.ID_CLAUSE_PROPERTY: return createIdClauseProperty();
      case Ck2Package.INT_CLAUSE_PROPERTY: return createIntClauseProperty();
      case Ck2Package.DATE_CLAUSE_PROPERTY: return createDateClauseProperty();
      case Ck2Package.PROBABILITY_PROPERTY: return createProbabilityProperty();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public List createList()
  {
    ListImpl list = new ListImpl();
    return list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Property createProperty()
  {
    PropertyImpl property = new PropertyImpl();
    return property;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Clause createClause()
  {
    ClauseImpl clause = new ClauseImpl();
    return clause;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StringProperty createStringProperty()
  {
    StringPropertyImpl stringProperty = new StringPropertyImpl();
    return stringProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IdProperty createIdProperty()
  {
    IdPropertyImpl idProperty = new IdPropertyImpl();
    return idProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CommandProperty createCommandProperty()
  {
    CommandPropertyImpl commandProperty = new CommandPropertyImpl();
    return commandProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BoolProperty createBoolProperty()
  {
    BoolPropertyImpl boolProperty = new BoolPropertyImpl();
    return boolProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DateProperty createDateProperty()
  {
    DatePropertyImpl dateProperty = new DatePropertyImpl();
    return dateProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IntegerProperty createIntegerProperty()
  {
    IntegerPropertyImpl integerProperty = new IntegerPropertyImpl();
    return integerProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DoubleProperty createDoubleProperty()
  {
    DoublePropertyImpl doubleProperty = new DoublePropertyImpl();
    return doubleProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ListProperty createListProperty()
  {
    ListPropertyImpl listProperty = new ListPropertyImpl();
    return listProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IdClauseProperty createIdClauseProperty()
  {
    IdClausePropertyImpl idClauseProperty = new IdClausePropertyImpl();
    return idClauseProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IntClauseProperty createIntClauseProperty()
  {
    IntClausePropertyImpl intClauseProperty = new IntClausePropertyImpl();
    return intClauseProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DateClauseProperty createDateClauseProperty()
  {
    DateClausePropertyImpl dateClauseProperty = new DateClausePropertyImpl();
    return dateClauseProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProbabilityProperty createProbabilityProperty()
  {
    ProbabilityPropertyImpl probabilityProperty = new ProbabilityPropertyImpl();
    return probabilityProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Ck2Package getCk2Package()
  {
    return (Ck2Package)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static Ck2Package getPackage()
  {
    return Ck2Package.eINSTANCE;
  }

} //Ck2FactoryImpl
