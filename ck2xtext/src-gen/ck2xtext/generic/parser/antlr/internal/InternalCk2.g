/*
 * generated by Xtext 2.15.0
 */
grammar InternalCk2;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ck2xtext.generic.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ck2xtext.generic.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ck2xtext.generic.services.Ck2GrammarAccess;

}

@parser::members {

 	private Ck2GrammarAccess grammarAccess;

    public InternalCk2Parser(TokenStream input, Ck2GrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected Ck2GrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getPropertiesPropertyParserRuleCall_0());
			}
			lv_properties_0_0=ruleProperty
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"properties",
					lv_properties_0_0,
					"ck2xtext.generic.Ck2.Property");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleListElem
entryRuleListElem returns [String current=null]:
	{ newCompositeNode(grammarAccess.getListElemRule()); }
	iv_ruleListElem=ruleListElem
	{ $current=$iv_ruleListElem.current.getText(); }
	EOF;

// Rule ListElem
ruleListElem returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getListElemAccess().getIDTerminalRuleCall_0());
		}
		    |
		this_STRING_1=RULE_STRING
		{
			$current.merge(this_STRING_1);
		}
		{
			newLeafNode(this_STRING_1, grammarAccess.getListElemAccess().getSTRINGTerminalRuleCall_1());
		}
		    |
		{
			newCompositeNode(grammarAccess.getListElemAccess().getIntegerParserRuleCall_2());
		}
		this_Integer_2=ruleInteger
		{
			$current.merge(this_Integer_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getListElemAccess().getDoubleParserRuleCall_3());
		}
		this_Double_3=ruleDouble
		{
			$current.merge(this_Double_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleList
entryRuleList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListRule()); }
	iv_ruleList=ruleList
	{ $current=$iv_ruleList.current; }
	EOF;

// Rule List
ruleList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getListAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListAccess().getElemsListElemParserRuleCall_1_0());
				}
				lv_elems_1_0=ruleListElem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListRule());
					}
					add(
						$current,
						"elems",
						lv_elems_1_0,
						"ck2xtext.generic.Ck2.ListElem");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getListAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getStringPropertyParserRuleCall_0());
		}
		this_StringProperty_0=ruleStringProperty
		{
			$current = $this_StringProperty_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getIdPropertyParserRuleCall_1());
		}
		this_IdProperty_1=ruleIdProperty
		{
			$current = $this_IdProperty_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getCommandPropertyParserRuleCall_2());
		}
		this_CommandProperty_2=ruleCommandProperty
		{
			$current = $this_CommandProperty_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getBoolPropertyParserRuleCall_3());
		}
		this_BoolProperty_3=ruleBoolProperty
		{
			$current = $this_BoolProperty_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getDatePropertyParserRuleCall_4());
		}
		this_DateProperty_4=ruleDateProperty
		{
			$current = $this_DateProperty_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getIntegerPropertyParserRuleCall_5());
		}
		this_IntegerProperty_5=ruleIntegerProperty
		{
			$current = $this_IntegerProperty_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getDoublePropertyParserRuleCall_6());
		}
		this_DoubleProperty_6=ruleDoubleProperty
		{
			$current = $this_DoubleProperty_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getHexadecimalPropertyParserRuleCall_7());
		}
		this_HexadecimalProperty_7=ruleHexadecimalProperty
		{
			$current = $this_HexadecimalProperty_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getListPropertyParserRuleCall_8());
		}
		this_ListProperty_8=ruleListProperty
		{
			$current = $this_ListProperty_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getClauseParserRuleCall_9());
		}
		this_Clause_9=ruleClause
		{
			$current = $this_Clause_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getProbabilityPropertyParserRuleCall_10());
		}
		this_ProbabilityProperty_10=ruleProbabilityProperty
		{
			$current = $this_ProbabilityProperty_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getBoolClausePropertyParserRuleCall_11());
		}
		this_BoolClauseProperty_11=ruleBoolClauseProperty
		{
			$current = $this_BoolClauseProperty_11.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleClause
entryRuleClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClauseRule()); }
	iv_ruleClause=ruleClause
	{ $current=$iv_ruleClause.current; }
	EOF;

// Rule Clause
ruleClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getClauseAccess().getIdClausePropertyParserRuleCall_0());
		}
		this_IdClauseProperty_0=ruleIdClauseProperty
		{
			$current = $this_IdClauseProperty_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClauseAccess().getIntClausePropertyParserRuleCall_1());
		}
		this_IntClauseProperty_1=ruleIntClauseProperty
		{
			$current = $this_IntClauseProperty_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClauseAccess().getDateClausePropertyParserRuleCall_2());
		}
		this_DateClauseProperty_2=ruleDateClauseProperty
		{
			$current = $this_DateClauseProperty_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStringProperty
entryRuleStringProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringPropertyRule()); }
	iv_ruleStringProperty=ruleStringProperty
	{ $current=$iv_ruleStringProperty.current; }
	EOF;

// Rule StringProperty
ruleStringProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_ID
				{
					newLeafNode(lv_key_0_0, grammarAccess.getStringPropertyAccess().getKeyIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"ck2xtext.common.Ck2Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getStringPropertyAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getStringPropertyAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"ck2xtext.common.Ck2Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleIdProperty
entryRuleIdProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdPropertyRule()); }
	iv_ruleIdProperty=ruleIdProperty
	{ $current=$iv_ruleIdProperty.current; }
	EOF;

// Rule IdProperty
ruleIdProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_ID
				{
					newLeafNode(lv_key_0_0, grammarAccess.getIdPropertyAccess().getKeyIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIdPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"ck2xtext.common.Ck2Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getIdPropertyAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_ID
				{
					newLeafNode(lv_value_2_0, grammarAccess.getIdPropertyAccess().getValueIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIdPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"ck2xtext.common.Ck2Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleCommandProperty
entryRuleCommandProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandPropertyRule()); }
	iv_ruleCommandProperty=ruleCommandProperty
	{ $current=$iv_ruleCommandProperty.current; }
	EOF;

// Rule CommandProperty
ruleCommandProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_ID
				{
					newLeafNode(lv_key_0_0, grammarAccess.getCommandPropertyAccess().getKeyIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommandPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"ck2xtext.common.Ck2Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getCommandPropertyAccess().getEqualsSignKeyword_1());
		}
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getCommandPropertyAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				lv_value_3_0=RULE_ID
				{
					newLeafNode(lv_value_3_0, grammarAccess.getCommandPropertyAccess().getValueIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommandPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_3_0,
						"ck2xtext.common.Ck2Terminals.ID");
				}
			)
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getCommandPropertyAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleBoolProperty
entryRuleBoolProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolPropertyRule()); }
	iv_ruleBoolProperty=ruleBoolProperty
	{ $current=$iv_ruleBoolProperty.current; }
	EOF;

// Rule BoolProperty
ruleBoolProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_ID
				{
					newLeafNode(lv_key_0_0, grammarAccess.getBoolPropertyAccess().getKeyIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoolPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"ck2xtext.common.Ck2Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getBoolPropertyAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_BOOL
				{
					newLeafNode(lv_value_2_0, grammarAccess.getBoolPropertyAccess().getValueBOOLTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoolPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"ck2xtext.common.Ck2Terminals.BOOL");
				}
			)
		)
	)
;

// Entry rule entryRuleDateProperty
entryRuleDateProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatePropertyRule()); }
	iv_ruleDateProperty=ruleDateProperty
	{ $current=$iv_ruleDateProperty.current; }
	EOF;

// Rule DateProperty
ruleDateProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_ID
				{
					newLeafNode(lv_key_0_0, grammarAccess.getDatePropertyAccess().getKeyIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatePropertyRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"ck2xtext.common.Ck2Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getDatePropertyAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatePropertyAccess().getValueDateParserRuleCall_2_0());
				}
				lv_value_2_0=ruleDate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatePropertyRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"ck2xtext.common.Ck2Terminals.Date");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIntegerProperty
entryRuleIntegerProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerPropertyRule()); }
	iv_ruleIntegerProperty=ruleIntegerProperty
	{ $current=$iv_ruleIntegerProperty.current; }
	EOF;

// Rule IntegerProperty
ruleIntegerProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_key_0_0=RULE_ID
					{
						newLeafNode(lv_key_0_0, grammarAccess.getIntegerPropertyAccess().getKeyIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIntegerPropertyRule());
						}
						setWithLastConsumed(
							$current,
							"key",
							lv_key_0_0,
							"ck2xtext.common.Ck2Terminals.ID");
					}
				)
			)
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getIntegerPropertyAccess().getEqualsSignKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntegerPropertyAccess().getValueIntegerParserRuleCall_0_2_0());
					}
					lv_value_2_0=ruleInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntegerPropertyRule());
						}
						set(
							$current,
							"value",
							lv_value_2_0,
							"ck2xtext.common.Ck2Terminals.Integer");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_key_3_0=RULE_ID
					{
						newLeafNode(lv_key_3_0, grammarAccess.getIntegerPropertyAccess().getKeyIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIntegerPropertyRule());
						}
						setWithLastConsumed(
							$current,
							"key",
							lv_key_3_0,
							"ck2xtext.common.Ck2Terminals.ID");
					}
				)
			)
			otherlv_4='=='
			{
				newLeafNode(otherlv_4, grammarAccess.getIntegerPropertyAccess().getEqualsSignEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntegerPropertyAccess().getValueIntegerParserRuleCall_1_2_0());
					}
					lv_value_5_0=ruleInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntegerPropertyRule());
						}
						set(
							$current,
							"value",
							lv_value_5_0,
							"ck2xtext.common.Ck2Terminals.Integer");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_key_6_0=RULE_ID
					{
						newLeafNode(lv_key_6_0, grammarAccess.getIntegerPropertyAccess().getKeyIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIntegerPropertyRule());
						}
						setWithLastConsumed(
							$current,
							"key",
							lv_key_6_0,
							"ck2xtext.common.Ck2Terminals.ID");
					}
				)
			)
			otherlv_7='>='
			{
				newLeafNode(otherlv_7, grammarAccess.getIntegerPropertyAccess().getGreaterThanSignEqualsSignKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntegerPropertyAccess().getValueIntegerParserRuleCall_2_2_0());
					}
					lv_value_8_0=ruleInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntegerPropertyRule());
						}
						set(
							$current,
							"value",
							lv_value_8_0,
							"ck2xtext.common.Ck2Terminals.Integer");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_key_9_0=RULE_ID
					{
						newLeafNode(lv_key_9_0, grammarAccess.getIntegerPropertyAccess().getKeyIDTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIntegerPropertyRule());
						}
						setWithLastConsumed(
							$current,
							"key",
							lv_key_9_0,
							"ck2xtext.common.Ck2Terminals.ID");
					}
				)
			)
			otherlv_10='>'
			{
				newLeafNode(otherlv_10, grammarAccess.getIntegerPropertyAccess().getGreaterThanSignKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntegerPropertyAccess().getValueIntegerParserRuleCall_3_2_0());
					}
					lv_value_11_0=ruleInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntegerPropertyRule());
						}
						set(
							$current,
							"value",
							lv_value_11_0,
							"ck2xtext.common.Ck2Terminals.Integer");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_key_12_0=RULE_ID
					{
						newLeafNode(lv_key_12_0, grammarAccess.getIntegerPropertyAccess().getKeyIDTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIntegerPropertyRule());
						}
						setWithLastConsumed(
							$current,
							"key",
							lv_key_12_0,
							"ck2xtext.common.Ck2Terminals.ID");
					}
				)
			)
			otherlv_13='<='
			{
				newLeafNode(otherlv_13, grammarAccess.getIntegerPropertyAccess().getLessThanSignEqualsSignKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntegerPropertyAccess().getValueIntegerParserRuleCall_4_2_0());
					}
					lv_value_14_0=ruleInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntegerPropertyRule());
						}
						set(
							$current,
							"value",
							lv_value_14_0,
							"ck2xtext.common.Ck2Terminals.Integer");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_key_15_0=RULE_ID
					{
						newLeafNode(lv_key_15_0, grammarAccess.getIntegerPropertyAccess().getKeyIDTerminalRuleCall_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIntegerPropertyRule());
						}
						setWithLastConsumed(
							$current,
							"key",
							lv_key_15_0,
							"ck2xtext.common.Ck2Terminals.ID");
					}
				)
			)
			otherlv_16='<'
			{
				newLeafNode(otherlv_16, grammarAccess.getIntegerPropertyAccess().getLessThanSignKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntegerPropertyAccess().getValueIntegerParserRuleCall_5_2_0());
					}
					lv_value_17_0=ruleInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntegerPropertyRule());
						}
						set(
							$current,
							"value",
							lv_value_17_0,
							"ck2xtext.common.Ck2Terminals.Integer");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDoubleProperty
entryRuleDoubleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoublePropertyRule()); }
	iv_ruleDoubleProperty=ruleDoubleProperty
	{ $current=$iv_ruleDoubleProperty.current; }
	EOF;

// Rule DoubleProperty
ruleDoubleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_key_0_0=RULE_ID
					{
						newLeafNode(lv_key_0_0, grammarAccess.getDoublePropertyAccess().getKeyIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDoublePropertyRule());
						}
						setWithLastConsumed(
							$current,
							"key",
							lv_key_0_0,
							"ck2xtext.common.Ck2Terminals.ID");
					}
				)
			)
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getDoublePropertyAccess().getEqualsSignKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDoublePropertyAccess().getValueDoubleParserRuleCall_0_2_0());
					}
					lv_value_2_0=ruleDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDoublePropertyRule());
						}
						set(
							$current,
							"value",
							lv_value_2_0,
							"ck2xtext.common.Ck2Terminals.Double");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_key_3_0=RULE_ID
					{
						newLeafNode(lv_key_3_0, grammarAccess.getDoublePropertyAccess().getKeyIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDoublePropertyRule());
						}
						setWithLastConsumed(
							$current,
							"key",
							lv_key_3_0,
							"ck2xtext.common.Ck2Terminals.ID");
					}
				)
			)
			otherlv_4='=='
			{
				newLeafNode(otherlv_4, grammarAccess.getDoublePropertyAccess().getEqualsSignEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDoublePropertyAccess().getValueDoubleParserRuleCall_1_2_0());
					}
					lv_value_5_0=ruleDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDoublePropertyRule());
						}
						set(
							$current,
							"value",
							lv_value_5_0,
							"ck2xtext.common.Ck2Terminals.Double");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_key_6_0=RULE_ID
					{
						newLeafNode(lv_key_6_0, grammarAccess.getDoublePropertyAccess().getKeyIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDoublePropertyRule());
						}
						setWithLastConsumed(
							$current,
							"key",
							lv_key_6_0,
							"ck2xtext.common.Ck2Terminals.ID");
					}
				)
			)
			otherlv_7='>='
			{
				newLeafNode(otherlv_7, grammarAccess.getDoublePropertyAccess().getGreaterThanSignEqualsSignKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDoublePropertyAccess().getValueDoubleParserRuleCall_2_2_0());
					}
					lv_value_8_0=ruleDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDoublePropertyRule());
						}
						set(
							$current,
							"value",
							lv_value_8_0,
							"ck2xtext.common.Ck2Terminals.Double");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_key_9_0=RULE_ID
					{
						newLeafNode(lv_key_9_0, grammarAccess.getDoublePropertyAccess().getKeyIDTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDoublePropertyRule());
						}
						setWithLastConsumed(
							$current,
							"key",
							lv_key_9_0,
							"ck2xtext.common.Ck2Terminals.ID");
					}
				)
			)
			otherlv_10='>'
			{
				newLeafNode(otherlv_10, grammarAccess.getDoublePropertyAccess().getGreaterThanSignKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDoublePropertyAccess().getValueDoubleParserRuleCall_3_2_0());
					}
					lv_value_11_0=ruleDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDoublePropertyRule());
						}
						set(
							$current,
							"value",
							lv_value_11_0,
							"ck2xtext.common.Ck2Terminals.Double");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_key_12_0=RULE_ID
					{
						newLeafNode(lv_key_12_0, grammarAccess.getDoublePropertyAccess().getKeyIDTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDoublePropertyRule());
						}
						setWithLastConsumed(
							$current,
							"key",
							lv_key_12_0,
							"ck2xtext.common.Ck2Terminals.ID");
					}
				)
			)
			otherlv_13='<='
			{
				newLeafNode(otherlv_13, grammarAccess.getDoublePropertyAccess().getLessThanSignEqualsSignKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDoublePropertyAccess().getValueDoubleParserRuleCall_4_2_0());
					}
					lv_value_14_0=ruleDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDoublePropertyRule());
						}
						set(
							$current,
							"value",
							lv_value_14_0,
							"ck2xtext.common.Ck2Terminals.Double");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_key_15_0=RULE_ID
					{
						newLeafNode(lv_key_15_0, grammarAccess.getDoublePropertyAccess().getKeyIDTerminalRuleCall_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDoublePropertyRule());
						}
						setWithLastConsumed(
							$current,
							"key",
							lv_key_15_0,
							"ck2xtext.common.Ck2Terminals.ID");
					}
				)
			)
			otherlv_16='<'
			{
				newLeafNode(otherlv_16, grammarAccess.getDoublePropertyAccess().getLessThanSignKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDoublePropertyAccess().getValueDoubleParserRuleCall_5_2_0());
					}
					lv_value_17_0=ruleDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDoublePropertyRule());
						}
						set(
							$current,
							"value",
							lv_value_17_0,
							"ck2xtext.common.Ck2Terminals.Double");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleHexadecimalProperty
entryRuleHexadecimalProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHexadecimalPropertyRule()); }
	iv_ruleHexadecimalProperty=ruleHexadecimalProperty
	{ $current=$iv_ruleHexadecimalProperty.current; }
	EOF;

// Rule HexadecimalProperty
ruleHexadecimalProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_ID
				{
					newLeafNode(lv_key_0_0, grammarAccess.getHexadecimalPropertyAccess().getKeyIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHexadecimalPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"ck2xtext.common.Ck2Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getHexadecimalPropertyAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_HEX
				{
					newLeafNode(lv_value_2_0, grammarAccess.getHexadecimalPropertyAccess().getValueHEXTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHexadecimalPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"ck2xtext.common.Ck2Terminals.HEX");
				}
			)
		)
	)
;

// Entry rule entryRuleListProperty
entryRuleListProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListPropertyRule()); }
	iv_ruleListProperty=ruleListProperty
	{ $current=$iv_ruleListProperty.current; }
	EOF;

// Rule ListProperty
ruleListProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_ID
				{
					newLeafNode(lv_key_0_0, grammarAccess.getListPropertyAccess().getKeyIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"ck2xtext.common.Ck2Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getListPropertyAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListPropertyAccess().getValueListParserRuleCall_2_0());
				}
				lv_value_2_0=ruleList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListPropertyRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"ck2xtext.generic.Ck2.List");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIdClauseProperty
entryRuleIdClauseProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdClausePropertyRule()); }
	iv_ruleIdClauseProperty=ruleIdClauseProperty
	{ $current=$iv_ruleIdClauseProperty.current; }
	EOF;

// Rule IdClauseProperty
ruleIdClauseProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getIdClausePropertyAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIdClausePropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"ck2xtext.common.Ck2Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getIdClausePropertyAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0='{'
				{
					newLeafNode(lv_value_2_0, grammarAccess.getIdClausePropertyAccess().getValueLeftCurlyBracketKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIdClausePropertyRule());
					}
					setWithLastConsumed($current, "value", lv_value_2_0, "{");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIdClausePropertyAccess().getPropertiesPropertyParserRuleCall_3_0());
				}
				lv_properties_3_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdClausePropertyRule());
					}
					add(
						$current,
						"properties",
						lv_properties_3_0,
						"ck2xtext.generic.Ck2.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getIdClausePropertyAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleIntClauseProperty
entryRuleIntClauseProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntClausePropertyRule()); }
	iv_ruleIntClauseProperty=ruleIntClauseProperty
	{ $current=$iv_ruleIntClauseProperty.current; }
	EOF;

// Rule IntClauseProperty
ruleIntClauseProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_INT
				{
					newLeafNode(lv_name_0_0, grammarAccess.getIntClausePropertyAccess().getNameINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntClausePropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"ck2xtext.common.Ck2Terminals.INT");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getIntClausePropertyAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0='{'
				{
					newLeafNode(lv_value_2_0, grammarAccess.getIntClausePropertyAccess().getValueLeftCurlyBracketKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntClausePropertyRule());
					}
					setWithLastConsumed($current, "value", lv_value_2_0, "{");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIntClausePropertyAccess().getPropertiesPropertyParserRuleCall_3_0());
				}
				lv_properties_3_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntClausePropertyRule());
					}
					add(
						$current,
						"properties",
						lv_properties_3_0,
						"ck2xtext.generic.Ck2.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getIntClausePropertyAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDateClauseProperty
entryRuleDateClauseProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDateClausePropertyRule()); }
	iv_ruleDateClauseProperty=ruleDateClauseProperty
	{ $current=$iv_ruleDateClauseProperty.current; }
	EOF;

// Rule DateClauseProperty
ruleDateClauseProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDateClausePropertyAccess().getNameDateParserRuleCall_0_0());
				}
				lv_name_0_0=ruleDate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDateClausePropertyRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"ck2xtext.common.Ck2Terminals.Date");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getDateClausePropertyAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0='{'
				{
					newLeafNode(lv_value_2_0, grammarAccess.getDateClausePropertyAccess().getValueLeftCurlyBracketKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateClausePropertyRule());
					}
					setWithLastConsumed($current, "value", lv_value_2_0, "{");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDateClausePropertyAccess().getPropertiesPropertyParserRuleCall_3_0());
				}
				lv_properties_3_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDateClausePropertyRule());
					}
					add(
						$current,
						"properties",
						lv_properties_3_0,
						"ck2xtext.generic.Ck2.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getDateClausePropertyAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleProbabilityProperty
entryRuleProbabilityProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProbabilityPropertyRule()); }
	iv_ruleProbabilityProperty=ruleProbabilityProperty
	{ $current=$iv_ruleProbabilityProperty.current; }
	EOF;

// Rule ProbabilityProperty
ruleProbabilityProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_INT
				{
					newLeafNode(lv_key_0_0, grammarAccess.getProbabilityPropertyAccess().getKeyINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProbabilityPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"ck2xtext.common.Ck2Terminals.INT");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getProbabilityPropertyAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProbabilityPropertyAccess().getValueListElemParserRuleCall_2_0());
				}
				lv_value_2_0=ruleListElem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProbabilityPropertyRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"ck2xtext.generic.Ck2.ListElem");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBoolClauseProperty
entryRuleBoolClauseProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolClausePropertyRule()); }
	iv_ruleBoolClauseProperty=ruleBoolClauseProperty
	{ $current=$iv_ruleBoolClauseProperty.current; }
	EOF;

// Rule BoolClauseProperty
ruleBoolClauseProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_BOOL
				{
					newLeafNode(lv_name_0_0, grammarAccess.getBoolClausePropertyAccess().getNameBOOLTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoolClausePropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"ck2xtext.common.Ck2Terminals.BOOL");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getBoolClausePropertyAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0='{'
				{
					newLeafNode(lv_value_2_0, grammarAccess.getBoolClausePropertyAccess().getValueLeftCurlyBracketKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoolClausePropertyRule());
					}
					setWithLastConsumed($current, "value", lv_value_2_0, "{");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBoolClausePropertyAccess().getPropertiesPropertyParserRuleCall_3_0());
				}
				lv_properties_3_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoolClausePropertyRule());
					}
					add(
						$current,
						"properties",
						lv_properties_3_0,
						"ck2xtext.generic.Ck2.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getBoolClausePropertyAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDate
entryRuleDate returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDateRule()); }
	iv_ruleDate=ruleDate
	{ $current=$iv_ruleDate.current.getText(); }
	EOF;

// Rule Date
ruleDate returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getDateAccess().getINTTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDateAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getDateAccess().getINTTerminalRuleCall_2());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDateAccess().getFullStopKeyword_3());
		}
		this_INT_4=RULE_INT
		{
			$current.merge(this_INT_4);
		}
		{
			newLeafNode(this_INT_4, grammarAccess.getDateAccess().getINTTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleInteger
entryRuleInteger returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIntegerRule()); }
	iv_ruleInteger=ruleInteger
	{ $current=$iv_ruleInteger.current.getText(); }
	EOF;

// Rule Integer
ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0_0());
			}
			    |
			kw='+'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getIntegerAccess().getPlusSignKeyword_0_1());
			}
		)?
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleDouble
entryRuleDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDoubleRule()); }
	iv_ruleDouble=ruleDouble
	{ $current=$iv_ruleDouble.current.getText(); }
	EOF;

// Rule Double
ruleDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDoubleAccess().getIntegerParserRuleCall_0());
		}
		this_Integer_0=ruleInteger
		{
			$current.merge(this_Integer_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDoubleAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getDoubleAccess().getINTTerminalRuleCall_2());
		}
		(
			kw='f'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getDoubleAccess().getFKeyword_3());
			}
		)?
	)
;

fragment RULE_DIGIT : '0'..'9';

RULE_BOOL : ('yes'|'no');

RULE_HEX : '0x' (RULE_DIGIT|'a'|'b'|'c'|'d'|'e'|'f')+;

RULE_INT : RULE_DIGIT+;

fragment RULE_NON_ASCII_CAP : ('\u00C0'|'\u00C1'|'\u00C2'|'\u00C3'|'\u00C4'|'\u00C5'|'\u00C6'|'\u00C7'|'\u00C8'|'\u00C9'|'\u00CA'|'\u00CB'|'\u00CC'|'\u00CD'|'\u00CE'|'\u00CF'|'\u00D0'|'\u00D1'|'\u00D2'|'\u00D3'|'\u00D4'|'\u00D5'|'\u00D6'|'\u00D8'|'\u0160'|'\u00D9'|'\u00DA'|'\u00DB'|'\u00DC'|'\u00DD'|'\u0178'|'\u00DE'|'\u00DF'|'\u0152');

fragment RULE_NON_ASCII_LOW : ('\u00E0'|'\u00E1'|'\u00E2'|'\u00E3'|'\u00E4'|'\u00E5'|'\u00E6'|'\u00E7'|'\u00E8'|'\u00E9'|'\u00EA'|'\u00EB'|'\u00EC'|'\u00ED'|'\u00EE'|'\u00EF'|'\u00F0'|'\u00F1'|'\u00F2'|'\u00F3'|'\u00F4'|'\u00F5'|'\u00F6'|'\u00F8'|'\u0161'|'\u00F9'|'\u00FA'|'\u00FB'|'\u00FC'|'\u00FD'|'\u00FF'|'\u017E'|'\u00FE'|'\u0153');

fragment RULE_ID_PART : ('a'..'z'|'A'..'Z'|RULE_NON_ASCII_LOW|RULE_NON_ASCII_CAP|'<');

RULE_ID : '^'? RULE_ID_PART (RULE_ID_PART|RULE_DIGIT|'_'|'-'|'\''|'\u2019'|':'|'.'|'>'|'@')*;

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
