/**
 * generated by Xtext 2.14.0
 */
package ck2xtext.gfx.ck2gfx;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see ck2xtext.gfx.ck2gfx.Ck2gfxFactory
 * @model kind="package"
 * @generated
 */
public interface Ck2gfxPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "ck2gfx";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.crusaderkings.com/gfx";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "ck2gfx";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  Ck2gfxPackage eINSTANCE = ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl.init();

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.ModelImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Types</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__TYPES = 0;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.ColorImpl <em>Color</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.ColorImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getColor()
   * @generated
   */
  int COLOR = 1;

  /**
   * The feature id for the '<em><b>R</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR__R = 0;

  /**
   * The feature id for the '<em><b>G</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR__G = 1;

  /**
   * The feature id for the '<em><b>B</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR__B = 2;

  /**
   * The number of structural features of the '<em>Color</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.ColorRatioImpl <em>Color Ratio</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.ColorRatioImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getColorRatio()
   * @generated
   */
  int COLOR_RATIO = 2;

  /**
   * The feature id for the '<em><b>R</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR_RATIO__R = 0;

  /**
   * The feature id for the '<em><b>G</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR_RATIO__G = 1;

  /**
   * The feature id for the '<em><b>B</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR_RATIO__B = 2;

  /**
   * The number of structural features of the '<em>Color Ratio</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR_RATIO_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.CoordinatesImpl <em>Coordinates</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.CoordinatesImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getCoordinates()
   * @generated
   */
  int COORDINATES = 3;

  /**
   * The feature id for the '<em><b>X</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COORDINATES__X = 0;

  /**
   * The feature id for the '<em><b>Y</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COORDINATES__Y = 1;

  /**
   * The number of structural features of the '<em>Coordinates</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COORDINATES_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.SpriteTypesImpl <em>Sprite Types</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.SpriteTypesImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getSpriteTypes()
   * @generated
   */
  int SPRITE_TYPES = 4;

  /**
   * The feature id for the '<em><b>Types</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPRITE_TYPES__TYPES = 0;

  /**
   * The number of structural features of the '<em>Sprite Types</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPRITE_TYPES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.SpriteTypeImpl <em>Sprite Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.SpriteTypeImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getSpriteType()
   * @generated
   */
  int SPRITE_TYPE = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPRITE_TYPE__NAME = 0;

  /**
   * The feature id for the '<em><b>Texturefile</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPRITE_TYPE__TEXTUREFILE = 1;

  /**
   * The feature id for the '<em><b>Effect File</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPRITE_TYPE__EFFECT_FILE = 2;

  /**
   * The feature id for the '<em><b>Allways Transparent</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPRITE_TYPE__ALLWAYS_TRANSPARENT = 3;

  /**
   * The feature id for the '<em><b>No Of Frames</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPRITE_TYPE__NO_OF_FRAMES = 4;

  /**
   * The feature id for the '<em><b>No Ref Count</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPRITE_TYPE__NO_REF_COUNT = 5;

  /**
   * The feature id for the '<em><b>Transparence Check</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPRITE_TYPE__TRANSPARENCE_CHECK = 6;

  /**
   * The feature id for the '<em><b>Can Be Lowres</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPRITE_TYPE__CAN_BE_LOWRES = 7;

  /**
   * The feature id for the '<em><b>Click Sound</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPRITE_TYPE__CLICK_SOUND = 8;

  /**
   * The feature id for the '<em><b>Load Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPRITE_TYPE__LOAD_TYPE = 9;

  /**
   * The number of structural features of the '<em>Sprite Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPRITE_TYPE_FEATURE_COUNT = 10;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.AnimatedSpriteTypeImpl <em>Animated Sprite Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.AnimatedSpriteTypeImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getAnimatedSpriteType()
   * @generated
   */
  int ANIMATED_SPRITE_TYPE = 6;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANIMATED_SPRITE_TYPE__NAME = 0;

  /**
   * The feature id for the '<em><b>Texturefile</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANIMATED_SPRITE_TYPE__TEXTUREFILE = 1;

  /**
   * The feature id for the '<em><b>No Of Frames</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANIMATED_SPRITE_TYPE__NO_OF_FRAMES = 2;

  /**
   * The feature id for the '<em><b>Animation Rate Fps</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANIMATED_SPRITE_TYPE__ANIMATION_RATE_FPS = 3;

  /**
   * The feature id for the '<em><b>Looping</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANIMATED_SPRITE_TYPE__LOOPING = 4;

  /**
   * The feature id for the '<em><b>Play On Show</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANIMATED_SPRITE_TYPE__PLAY_ON_SHOW = 5;

  /**
   * The number of structural features of the '<em>Animated Sprite Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANIMATED_SPRITE_TYPE_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.CorneredTileSpriteTypeImpl <em>Cornered Tile Sprite Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.CorneredTileSpriteTypeImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getCorneredTileSpriteType()
   * @generated
   */
  int CORNERED_TILE_SPRITE_TYPE = 7;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CORNERED_TILE_SPRITE_TYPE__NAME = 0;

  /**
   * The feature id for the '<em><b>Size</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CORNERED_TILE_SPRITE_TYPE__SIZE = 1;

  /**
   * The feature id for the '<em><b>Texturefile</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CORNERED_TILE_SPRITE_TYPE__TEXTUREFILE = 2;

  /**
   * The feature id for the '<em><b>Border Size</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CORNERED_TILE_SPRITE_TYPE__BORDER_SIZE = 3;

  /**
   * The feature id for the '<em><b>Load Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CORNERED_TILE_SPRITE_TYPE__LOAD_TYPE = 4;

  /**
   * The feature id for the '<em><b>Tiling Center</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CORNERED_TILE_SPRITE_TYPE__TILING_CENTER = 5;

  /**
   * The number of structural features of the '<em>Cornered Tile Sprite Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CORNERED_TILE_SPRITE_TYPE_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.ProgressbarTypeImpl <em>Progressbar Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.ProgressbarTypeImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getProgressbarType()
   * @generated
   */
  int PROGRESSBAR_TYPE = 8;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRESSBAR_TYPE__NAME = 0;

  /**
   * The feature id for the '<em><b>Color</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRESSBAR_TYPE__COLOR = 1;

  /**
   * The feature id for the '<em><b>Color2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRESSBAR_TYPE__COLOR2 = 2;

  /**
   * The feature id for the '<em><b>Texture File1</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRESSBAR_TYPE__TEXTURE_FILE1 = 3;

  /**
   * The feature id for the '<em><b>Texture File2</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRESSBAR_TYPE__TEXTURE_FILE2 = 4;

  /**
   * The feature id for the '<em><b>Size</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRESSBAR_TYPE__SIZE = 5;

  /**
   * The feature id for the '<em><b>Horizontal</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRESSBAR_TYPE__HORIZONTAL = 6;

  /**
   * The feature id for the '<em><b>Effect File</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRESSBAR_TYPE__EFFECT_FILE = 7;

  /**
   * The feature id for the '<em><b>Allways Transparent</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRESSBAR_TYPE__ALLWAYS_TRANSPARENT = 8;

  /**
   * The feature id for the '<em><b>Max Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRESSBAR_TYPE__MAX_VALUE = 9;

  /**
   * The number of structural features of the '<em>Progressbar Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRESSBAR_TYPE_FEATURE_COUNT = 10;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.PortraitTypeImpl <em>Portrait Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.PortraitTypeImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getPortraitType()
   * @generated
   */
  int PORTRAIT_TYPE = 9;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PORTRAIT_TYPE__NAME = 0;

  /**
   * The feature id for the '<em><b>Effect File</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PORTRAIT_TYPE__EFFECT_FILE = 1;

  /**
   * The feature id for the '<em><b>Layers</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PORTRAIT_TYPE__LAYERS = 2;

  /**
   * The feature id for the '<em><b>Hair Color Index</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PORTRAIT_TYPE__HAIR_COLOR_INDEX = 3;

  /**
   * The feature id for the '<em><b>Hair Color</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PORTRAIT_TYPE__HAIR_COLOR = 4;

  /**
   * The feature id for the '<em><b>Eye Color Index</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PORTRAIT_TYPE__EYE_COLOR_INDEX = 5;

  /**
   * The feature id for the '<em><b>Eye Color</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PORTRAIT_TYPE__EYE_COLOR = 6;

  /**
   * The feature id for the '<em><b>Headgear That Hides Hair</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PORTRAIT_TYPE__HEADGEAR_THAT_HIDES_HAIR = 7;

  /**
   * The number of structural features of the '<em>Portrait Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PORTRAIT_TYPE_FEATURE_COUNT = 8;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.MaskedShieldTypeImpl <em>Masked Shield Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.MaskedShieldTypeImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getMaskedShieldType()
   * @generated
   */
  int MASKED_SHIELD_TYPE = 10;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MASKED_SHIELD_TYPE__NAME = 0;

  /**
   * The feature id for the '<em><b>Texture File1</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MASKED_SHIELD_TYPE__TEXTURE_FILE1 = 1;

  /**
   * The feature id for the '<em><b>Texture File2</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MASKED_SHIELD_TYPE__TEXTURE_FILE2 = 2;

  /**
   * The feature id for the '<em><b>Effect File</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MASKED_SHIELD_TYPE__EFFECT_FILE = 3;

  /**
   * The feature id for the '<em><b>Allways Transparent</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MASKED_SHIELD_TYPE__ALLWAYS_TRANSPARENT = 4;

  /**
   * The number of structural features of the '<em>Masked Shield Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MASKED_SHIELD_TYPE_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.LineChartTypeImpl <em>Line Chart Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.LineChartTypeImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getLineChartType()
   * @generated
   */
  int LINE_CHART_TYPE = 11;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LINE_CHART_TYPE__NAME = 0;

  /**
   * The feature id for the '<em><b>Size</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LINE_CHART_TYPE__SIZE = 1;

  /**
   * The feature id for the '<em><b>Line Width</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LINE_CHART_TYPE__LINE_WIDTH = 2;

  /**
   * The number of structural features of the '<em>Line Chart Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LINE_CHART_TYPE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.CoatOfArmsTypeImpl <em>Coat Of Arms Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.CoatOfArmsTypeImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getCoatOfArmsType()
   * @generated
   */
  int COAT_OF_ARMS_TYPE = 12;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COAT_OF_ARMS_TYPE__NAME = 0;

  /**
   * The feature id for the '<em><b>Frame</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COAT_OF_ARMS_TYPE__FRAME = 1;

  /**
   * The feature id for the '<em><b>Mask</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COAT_OF_ARMS_TYPE__MASK = 2;

  /**
   * The feature id for the '<em><b>Seal Overlay</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COAT_OF_ARMS_TYPE__SEAL_OVERLAY = 3;

  /**
   * The feature id for the '<em><b>Effect</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COAT_OF_ARMS_TYPE__EFFECT = 4;

  /**
   * The feature id for the '<em><b>Layers</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COAT_OF_ARMS_TYPE__LAYERS = 5;

  /**
   * The number of structural features of the '<em>Coat Of Arms Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COAT_OF_ARMS_TYPE_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.CoatOfArmsLayerImpl <em>Coat Of Arms Layer</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.CoatOfArmsLayerImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getCoatOfArmsLayer()
   * @generated
   */
  int COAT_OF_ARMS_LAYER = 13;

  /**
   * The feature id for the '<em><b>Mask</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COAT_OF_ARMS_LAYER__MASK = 0;

  /**
   * The feature id for the '<em><b>Center</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COAT_OF_ARMS_LAYER__CENTER = 1;

  /**
   * The feature id for the '<em><b>Scale</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COAT_OF_ARMS_LAYER__SCALE = 2;

  /**
   * The number of structural features of the '<em>Coat Of Arms Layer</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COAT_OF_ARMS_LAYER_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.ObjectTypesImpl <em>Object Types</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.ObjectTypesImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getObjectTypes()
   * @generated
   */
  int OBJECT_TYPES = 14;

  /**
   * The feature id for the '<em><b>Types</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT_TYPES__TYPES = 0;

  /**
   * The number of structural features of the '<em>Object Types</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT_TYPES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.EMFXActorTypeImpl <em>EMFX Actor Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.EMFXActorTypeImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getEMFXActorType()
   * @generated
   */
  int EMFX_ACTOR_TYPE = 15;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EMFX_ACTOR_TYPE__NAME = 0;

  /**
   * The feature id for the '<em><b>Actor File</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EMFX_ACTOR_TYPE__ACTOR_FILE = 1;

  /**
   * The feature id for the '<em><b>Animation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EMFX_ACTOR_TYPE__ANIMATION = 2;

  /**
   * The feature id for the '<em><b>Idle</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EMFX_ACTOR_TYPE__IDLE = 3;

  /**
   * The feature id for the '<em><b>Move</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EMFX_ACTOR_TYPE__MOVE = 4;

  /**
   * The feature id for the '<em><b>Attack</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EMFX_ACTOR_TYPE__ATTACK = 5;

  /**
   * The feature id for the '<em><b>Scale</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EMFX_ACTOR_TYPE__SCALE = 6;

  /**
   * The feature id for the '<em><b>Use Animation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EMFX_ACTOR_TYPE__USE_ANIMATION = 7;

  /**
   * The feature id for the '<em><b>Cull Distance</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EMFX_ACTOR_TYPE__CULL_DISTANCE = 8;

  /**
   * The feature id for the '<em><b>Scale On Cull Distance</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EMFX_ACTOR_TYPE__SCALE_ON_CULL_DISTANCE = 9;

  /**
   * The number of structural features of the '<em>EMFX Actor Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EMFX_ACTOR_TYPE_FEATURE_COUNT = 10;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.AnimationImpl <em>Animation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.AnimationImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getAnimation()
   * @generated
   */
  int ANIMATION = 16;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANIMATION__NAME = 0;

  /**
   * The feature id for the '<em><b>File</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANIMATION__FILE = 1;

  /**
   * The feature id for the '<em><b>Default Animation Time</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANIMATION__DEFAULT_ANIMATION_TIME = 2;

  /**
   * The number of structural features of the '<em>Animation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANIMATION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.PdxmeshImpl <em>Pdxmesh</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.PdxmeshImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getPdxmesh()
   * @generated
   */
  int PDXMESH = 17;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PDXMESH__NAME = 0;

  /**
   * The feature id for the '<em><b>Actor File</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PDXMESH__ACTOR_FILE = 1;

  /**
   * The feature id for the '<em><b>Scale</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PDXMESH__SCALE = 2;

  /**
   * The feature id for the '<em><b>Cull Distance</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PDXMESH__CULL_DISTANCE = 3;

  /**
   * The number of structural features of the '<em>Pdxmesh</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PDXMESH_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.ArrowTypeImpl <em>Arrow Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.ArrowTypeImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getArrowType()
   * @generated
   */
  int ARROW_TYPE = 18;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARROW_TYPE__NAME = 0;

  /**
   * The feature id for the '<em><b>Size</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARROW_TYPE__SIZE = 1;

  /**
   * The feature id for the '<em><b>Texture File</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARROW_TYPE__TEXTURE_FILE = 2;

  /**
   * The feature id for the '<em><b>Body Texture</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARROW_TYPE__BODY_TEXTURE = 3;

  /**
   * The feature id for the '<em><b>Color</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARROW_TYPE__COLOR = 4;

  /**
   * The feature id for the '<em><b>Color2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARROW_TYPE__COLOR2 = 5;

  /**
   * The feature id for the '<em><b>End At</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARROW_TYPE__END_AT = 6;

  /**
   * The feature id for the '<em><b>Height</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARROW_TYPE__HEIGHT = 7;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARROW_TYPE__TYPE = 8;

  /**
   * The feature id for the '<em><b>Heading</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARROW_TYPE__HEADING = 9;

  /**
   * The feature id for the '<em><b>Effect</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARROW_TYPE__EFFECT = 10;

  /**
   * The number of structural features of the '<em>Arrow Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARROW_TYPE_FEATURE_COUNT = 11;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.BitmapFontsImpl <em>Bitmap Fonts</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.BitmapFontsImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getBitmapFonts()
   * @generated
   */
  int BITMAP_FONTS = 19;

  /**
   * The feature id for the '<em><b>Types</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BITMAP_FONTS__TYPES = 0;

  /**
   * The number of structural features of the '<em>Bitmap Fonts</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BITMAP_FONTS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.BitmapFontImpl <em>Bitmap Font</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.BitmapFontImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getBitmapFont()
   * @generated
   */
  int BITMAP_FONT = 20;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BITMAP_FONT__NAME = 0;

  /**
   * The feature id for the '<em><b>Font Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BITMAP_FONT__FONT_NAME = 1;

  /**
   * The feature id for the '<em><b>Color</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BITMAP_FONT__COLOR = 2;

  /**
   * The feature id for the '<em><b>Effect</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BITMAP_FONT__EFFECT = 3;

  /**
   * The feature id for the '<em><b>Colorcodes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BITMAP_FONT__COLORCODES = 4;

  /**
   * The number of structural features of the '<em>Bitmap Font</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BITMAP_FONT_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link ck2xtext.gfx.ck2gfx.impl.ColorCodeImpl <em>Color Code</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ck2xtext.gfx.ck2gfx.impl.ColorCodeImpl
   * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getColorCode()
   * @generated
   */
  int COLOR_CODE = 21;

  /**
   * The feature id for the '<em><b>Key</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR_CODE__KEY = 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR_CODE__VALUE = 1;

  /**
   * The number of structural features of the '<em>Color Code</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLOR_CODE_FEATURE_COUNT = 2;


  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see ck2xtext.gfx.ck2gfx.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference list '{@link ck2xtext.gfx.ck2gfx.Model#getTypes <em>Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Types</em>'.
   * @see ck2xtext.gfx.ck2gfx.Model#getTypes()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Types();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.Color <em>Color</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Color</em>'.
   * @see ck2xtext.gfx.ck2gfx.Color
   * @generated
   */
  EClass getColor();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.Color#getR <em>R</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>R</em>'.
   * @see ck2xtext.gfx.ck2gfx.Color#getR()
   * @see #getColor()
   * @generated
   */
  EAttribute getColor_R();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.Color#getG <em>G</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>G</em>'.
   * @see ck2xtext.gfx.ck2gfx.Color#getG()
   * @see #getColor()
   * @generated
   */
  EAttribute getColor_G();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.Color#getB <em>B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>B</em>'.
   * @see ck2xtext.gfx.ck2gfx.Color#getB()
   * @see #getColor()
   * @generated
   */
  EAttribute getColor_B();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.ColorRatio <em>Color Ratio</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Color Ratio</em>'.
   * @see ck2xtext.gfx.ck2gfx.ColorRatio
   * @generated
   */
  EClass getColorRatio();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ColorRatio#getR <em>R</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>R</em>'.
   * @see ck2xtext.gfx.ck2gfx.ColorRatio#getR()
   * @see #getColorRatio()
   * @generated
   */
  EAttribute getColorRatio_R();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ColorRatio#getG <em>G</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>G</em>'.
   * @see ck2xtext.gfx.ck2gfx.ColorRatio#getG()
   * @see #getColorRatio()
   * @generated
   */
  EAttribute getColorRatio_G();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ColorRatio#getB <em>B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>B</em>'.
   * @see ck2xtext.gfx.ck2gfx.ColorRatio#getB()
   * @see #getColorRatio()
   * @generated
   */
  EAttribute getColorRatio_B();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.Coordinates <em>Coordinates</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Coordinates</em>'.
   * @see ck2xtext.gfx.ck2gfx.Coordinates
   * @generated
   */
  EClass getCoordinates();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.Coordinates#getX <em>X</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>X</em>'.
   * @see ck2xtext.gfx.ck2gfx.Coordinates#getX()
   * @see #getCoordinates()
   * @generated
   */
  EAttribute getCoordinates_X();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.Coordinates#getY <em>Y</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Y</em>'.
   * @see ck2xtext.gfx.ck2gfx.Coordinates#getY()
   * @see #getCoordinates()
   * @generated
   */
  EAttribute getCoordinates_Y();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.SpriteTypes <em>Sprite Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sprite Types</em>'.
   * @see ck2xtext.gfx.ck2gfx.SpriteTypes
   * @generated
   */
  EClass getSpriteTypes();

  /**
   * Returns the meta object for the containment reference list '{@link ck2xtext.gfx.ck2gfx.SpriteTypes#getTypes <em>Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Types</em>'.
   * @see ck2xtext.gfx.ck2gfx.SpriteTypes#getTypes()
   * @see #getSpriteTypes()
   * @generated
   */
  EReference getSpriteTypes_Types();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.SpriteType <em>Sprite Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sprite Type</em>'.
   * @see ck2xtext.gfx.ck2gfx.SpriteType
   * @generated
   */
  EClass getSpriteType();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.SpriteType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ck2xtext.gfx.ck2gfx.SpriteType#getName()
   * @see #getSpriteType()
   * @generated
   */
  EAttribute getSpriteType_Name();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.SpriteType#getTexturefile <em>Texturefile</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Texturefile</em>'.
   * @see ck2xtext.gfx.ck2gfx.SpriteType#getTexturefile()
   * @see #getSpriteType()
   * @generated
   */
  EAttribute getSpriteType_Texturefile();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.SpriteType#getEffectFile <em>Effect File</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Effect File</em>'.
   * @see ck2xtext.gfx.ck2gfx.SpriteType#getEffectFile()
   * @see #getSpriteType()
   * @generated
   */
  EAttribute getSpriteType_EffectFile();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.SpriteType#isAllwaysTransparent <em>Allways Transparent</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Allways Transparent</em>'.
   * @see ck2xtext.gfx.ck2gfx.SpriteType#isAllwaysTransparent()
   * @see #getSpriteType()
   * @generated
   */
  EAttribute getSpriteType_AllwaysTransparent();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.SpriteType#getNoOfFrames <em>No Of Frames</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>No Of Frames</em>'.
   * @see ck2xtext.gfx.ck2gfx.SpriteType#getNoOfFrames()
   * @see #getSpriteType()
   * @generated
   */
  EAttribute getSpriteType_NoOfFrames();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.SpriteType#isNoRefCount <em>No Ref Count</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>No Ref Count</em>'.
   * @see ck2xtext.gfx.ck2gfx.SpriteType#isNoRefCount()
   * @see #getSpriteType()
   * @generated
   */
  EAttribute getSpriteType_NoRefCount();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.SpriteType#isTransparenceCheck <em>Transparence Check</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Transparence Check</em>'.
   * @see ck2xtext.gfx.ck2gfx.SpriteType#isTransparenceCheck()
   * @see #getSpriteType()
   * @generated
   */
  EAttribute getSpriteType_TransparenceCheck();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.SpriteType#isCanBeLowres <em>Can Be Lowres</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Can Be Lowres</em>'.
   * @see ck2xtext.gfx.ck2gfx.SpriteType#isCanBeLowres()
   * @see #getSpriteType()
   * @generated
   */
  EAttribute getSpriteType_CanBeLowres();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.SpriteType#getClickSound <em>Click Sound</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Click Sound</em>'.
   * @see ck2xtext.gfx.ck2gfx.SpriteType#getClickSound()
   * @see #getSpriteType()
   * @generated
   */
  EAttribute getSpriteType_ClickSound();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.SpriteType#getLoadType <em>Load Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Load Type</em>'.
   * @see ck2xtext.gfx.ck2gfx.SpriteType#getLoadType()
   * @see #getSpriteType()
   * @generated
   */
  EAttribute getSpriteType_LoadType();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.AnimatedSpriteType <em>Animated Sprite Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Animated Sprite Type</em>'.
   * @see ck2xtext.gfx.ck2gfx.AnimatedSpriteType
   * @generated
   */
  EClass getAnimatedSpriteType();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.AnimatedSpriteType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ck2xtext.gfx.ck2gfx.AnimatedSpriteType#getName()
   * @see #getAnimatedSpriteType()
   * @generated
   */
  EAttribute getAnimatedSpriteType_Name();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.AnimatedSpriteType#getTexturefile <em>Texturefile</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Texturefile</em>'.
   * @see ck2xtext.gfx.ck2gfx.AnimatedSpriteType#getTexturefile()
   * @see #getAnimatedSpriteType()
   * @generated
   */
  EAttribute getAnimatedSpriteType_Texturefile();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.AnimatedSpriteType#getNoOfFrames <em>No Of Frames</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>No Of Frames</em>'.
   * @see ck2xtext.gfx.ck2gfx.AnimatedSpriteType#getNoOfFrames()
   * @see #getAnimatedSpriteType()
   * @generated
   */
  EAttribute getAnimatedSpriteType_NoOfFrames();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.AnimatedSpriteType#getAnimationRateFps <em>Animation Rate Fps</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Animation Rate Fps</em>'.
   * @see ck2xtext.gfx.ck2gfx.AnimatedSpriteType#getAnimationRateFps()
   * @see #getAnimatedSpriteType()
   * @generated
   */
  EAttribute getAnimatedSpriteType_AnimationRateFps();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.AnimatedSpriteType#isLooping <em>Looping</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Looping</em>'.
   * @see ck2xtext.gfx.ck2gfx.AnimatedSpriteType#isLooping()
   * @see #getAnimatedSpriteType()
   * @generated
   */
  EAttribute getAnimatedSpriteType_Looping();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.AnimatedSpriteType#isPlayOnShow <em>Play On Show</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Play On Show</em>'.
   * @see ck2xtext.gfx.ck2gfx.AnimatedSpriteType#isPlayOnShow()
   * @see #getAnimatedSpriteType()
   * @generated
   */
  EAttribute getAnimatedSpriteType_PlayOnShow();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.CorneredTileSpriteType <em>Cornered Tile Sprite Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cornered Tile Sprite Type</em>'.
   * @see ck2xtext.gfx.ck2gfx.CorneredTileSpriteType
   * @generated
   */
  EClass getCorneredTileSpriteType();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.CorneredTileSpriteType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ck2xtext.gfx.ck2gfx.CorneredTileSpriteType#getName()
   * @see #getCorneredTileSpriteType()
   * @generated
   */
  EAttribute getCorneredTileSpriteType_Name();

  /**
   * Returns the meta object for the containment reference '{@link ck2xtext.gfx.ck2gfx.CorneredTileSpriteType#getSize <em>Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Size</em>'.
   * @see ck2xtext.gfx.ck2gfx.CorneredTileSpriteType#getSize()
   * @see #getCorneredTileSpriteType()
   * @generated
   */
  EReference getCorneredTileSpriteType_Size();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.CorneredTileSpriteType#getTexturefile <em>Texturefile</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Texturefile</em>'.
   * @see ck2xtext.gfx.ck2gfx.CorneredTileSpriteType#getTexturefile()
   * @see #getCorneredTileSpriteType()
   * @generated
   */
  EAttribute getCorneredTileSpriteType_Texturefile();

  /**
   * Returns the meta object for the containment reference '{@link ck2xtext.gfx.ck2gfx.CorneredTileSpriteType#getBorderSize <em>Border Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Border Size</em>'.
   * @see ck2xtext.gfx.ck2gfx.CorneredTileSpriteType#getBorderSize()
   * @see #getCorneredTileSpriteType()
   * @generated
   */
  EReference getCorneredTileSpriteType_BorderSize();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.CorneredTileSpriteType#getLoadType <em>Load Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Load Type</em>'.
   * @see ck2xtext.gfx.ck2gfx.CorneredTileSpriteType#getLoadType()
   * @see #getCorneredTileSpriteType()
   * @generated
   */
  EAttribute getCorneredTileSpriteType_LoadType();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.CorneredTileSpriteType#isTilingCenter <em>Tiling Center</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Tiling Center</em>'.
   * @see ck2xtext.gfx.ck2gfx.CorneredTileSpriteType#isTilingCenter()
   * @see #getCorneredTileSpriteType()
   * @generated
   */
  EAttribute getCorneredTileSpriteType_TilingCenter();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.ProgressbarType <em>Progressbar Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Progressbar Type</em>'.
   * @see ck2xtext.gfx.ck2gfx.ProgressbarType
   * @generated
   */
  EClass getProgressbarType();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ProgressbarType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ck2xtext.gfx.ck2gfx.ProgressbarType#getName()
   * @see #getProgressbarType()
   * @generated
   */
  EAttribute getProgressbarType_Name();

  /**
   * Returns the meta object for the containment reference '{@link ck2xtext.gfx.ck2gfx.ProgressbarType#getColor <em>Color</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Color</em>'.
   * @see ck2xtext.gfx.ck2gfx.ProgressbarType#getColor()
   * @see #getProgressbarType()
   * @generated
   */
  EReference getProgressbarType_Color();

  /**
   * Returns the meta object for the containment reference '{@link ck2xtext.gfx.ck2gfx.ProgressbarType#getColor2 <em>Color2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Color2</em>'.
   * @see ck2xtext.gfx.ck2gfx.ProgressbarType#getColor2()
   * @see #getProgressbarType()
   * @generated
   */
  EReference getProgressbarType_Color2();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ProgressbarType#getTextureFile1 <em>Texture File1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Texture File1</em>'.
   * @see ck2xtext.gfx.ck2gfx.ProgressbarType#getTextureFile1()
   * @see #getProgressbarType()
   * @generated
   */
  EAttribute getProgressbarType_TextureFile1();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ProgressbarType#getTextureFile2 <em>Texture File2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Texture File2</em>'.
   * @see ck2xtext.gfx.ck2gfx.ProgressbarType#getTextureFile2()
   * @see #getProgressbarType()
   * @generated
   */
  EAttribute getProgressbarType_TextureFile2();

  /**
   * Returns the meta object for the containment reference '{@link ck2xtext.gfx.ck2gfx.ProgressbarType#getSize <em>Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Size</em>'.
   * @see ck2xtext.gfx.ck2gfx.ProgressbarType#getSize()
   * @see #getProgressbarType()
   * @generated
   */
  EReference getProgressbarType_Size();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ProgressbarType#isHorizontal <em>Horizontal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Horizontal</em>'.
   * @see ck2xtext.gfx.ck2gfx.ProgressbarType#isHorizontal()
   * @see #getProgressbarType()
   * @generated
   */
  EAttribute getProgressbarType_Horizontal();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ProgressbarType#getEffectFile <em>Effect File</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Effect File</em>'.
   * @see ck2xtext.gfx.ck2gfx.ProgressbarType#getEffectFile()
   * @see #getProgressbarType()
   * @generated
   */
  EAttribute getProgressbarType_EffectFile();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ProgressbarType#isAllwaysTransparent <em>Allways Transparent</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Allways Transparent</em>'.
   * @see ck2xtext.gfx.ck2gfx.ProgressbarType#isAllwaysTransparent()
   * @see #getProgressbarType()
   * @generated
   */
  EAttribute getProgressbarType_AllwaysTransparent();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ProgressbarType#getMaxValue <em>Max Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max Value</em>'.
   * @see ck2xtext.gfx.ck2gfx.ProgressbarType#getMaxValue()
   * @see #getProgressbarType()
   * @generated
   */
  EAttribute getProgressbarType_MaxValue();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.PortraitType <em>Portrait Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Portrait Type</em>'.
   * @see ck2xtext.gfx.ck2gfx.PortraitType
   * @generated
   */
  EClass getPortraitType();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.PortraitType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ck2xtext.gfx.ck2gfx.PortraitType#getName()
   * @see #getPortraitType()
   * @generated
   */
  EAttribute getPortraitType_Name();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.PortraitType#getEffectFile <em>Effect File</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Effect File</em>'.
   * @see ck2xtext.gfx.ck2gfx.PortraitType#getEffectFile()
   * @see #getPortraitType()
   * @generated
   */
  EAttribute getPortraitType_EffectFile();

  /**
   * Returns the meta object for the attribute list '{@link ck2xtext.gfx.ck2gfx.PortraitType#getLayers <em>Layers</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Layers</em>'.
   * @see ck2xtext.gfx.ck2gfx.PortraitType#getLayers()
   * @see #getPortraitType()
   * @generated
   */
  EAttribute getPortraitType_Layers();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.PortraitType#getHairColorIndex <em>Hair Color Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Hair Color Index</em>'.
   * @see ck2xtext.gfx.ck2gfx.PortraitType#getHairColorIndex()
   * @see #getPortraitType()
   * @generated
   */
  EAttribute getPortraitType_HairColorIndex();

  /**
   * Returns the meta object for the containment reference list '{@link ck2xtext.gfx.ck2gfx.PortraitType#getHairColor <em>Hair Color</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Hair Color</em>'.
   * @see ck2xtext.gfx.ck2gfx.PortraitType#getHairColor()
   * @see #getPortraitType()
   * @generated
   */
  EReference getPortraitType_HairColor();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.PortraitType#getEyeColorIndex <em>Eye Color Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Eye Color Index</em>'.
   * @see ck2xtext.gfx.ck2gfx.PortraitType#getEyeColorIndex()
   * @see #getPortraitType()
   * @generated
   */
  EAttribute getPortraitType_EyeColorIndex();

  /**
   * Returns the meta object for the containment reference list '{@link ck2xtext.gfx.ck2gfx.PortraitType#getEyeColor <em>Eye Color</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Eye Color</em>'.
   * @see ck2xtext.gfx.ck2gfx.PortraitType#getEyeColor()
   * @see #getPortraitType()
   * @generated
   */
  EReference getPortraitType_EyeColor();

  /**
   * Returns the meta object for the attribute list '{@link ck2xtext.gfx.ck2gfx.PortraitType#getHeadgearThatHidesHair <em>Headgear That Hides Hair</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Headgear That Hides Hair</em>'.
   * @see ck2xtext.gfx.ck2gfx.PortraitType#getHeadgearThatHidesHair()
   * @see #getPortraitType()
   * @generated
   */
  EAttribute getPortraitType_HeadgearThatHidesHair();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.MaskedShieldType <em>Masked Shield Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Masked Shield Type</em>'.
   * @see ck2xtext.gfx.ck2gfx.MaskedShieldType
   * @generated
   */
  EClass getMaskedShieldType();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.MaskedShieldType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ck2xtext.gfx.ck2gfx.MaskedShieldType#getName()
   * @see #getMaskedShieldType()
   * @generated
   */
  EAttribute getMaskedShieldType_Name();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.MaskedShieldType#getTextureFile1 <em>Texture File1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Texture File1</em>'.
   * @see ck2xtext.gfx.ck2gfx.MaskedShieldType#getTextureFile1()
   * @see #getMaskedShieldType()
   * @generated
   */
  EAttribute getMaskedShieldType_TextureFile1();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.MaskedShieldType#getTextureFile2 <em>Texture File2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Texture File2</em>'.
   * @see ck2xtext.gfx.ck2gfx.MaskedShieldType#getTextureFile2()
   * @see #getMaskedShieldType()
   * @generated
   */
  EAttribute getMaskedShieldType_TextureFile2();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.MaskedShieldType#getEffectFile <em>Effect File</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Effect File</em>'.
   * @see ck2xtext.gfx.ck2gfx.MaskedShieldType#getEffectFile()
   * @see #getMaskedShieldType()
   * @generated
   */
  EAttribute getMaskedShieldType_EffectFile();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.MaskedShieldType#isAllwaysTransparent <em>Allways Transparent</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Allways Transparent</em>'.
   * @see ck2xtext.gfx.ck2gfx.MaskedShieldType#isAllwaysTransparent()
   * @see #getMaskedShieldType()
   * @generated
   */
  EAttribute getMaskedShieldType_AllwaysTransparent();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.LineChartType <em>Line Chart Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Line Chart Type</em>'.
   * @see ck2xtext.gfx.ck2gfx.LineChartType
   * @generated
   */
  EClass getLineChartType();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.LineChartType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ck2xtext.gfx.ck2gfx.LineChartType#getName()
   * @see #getLineChartType()
   * @generated
   */
  EAttribute getLineChartType_Name();

  /**
   * Returns the meta object for the containment reference '{@link ck2xtext.gfx.ck2gfx.LineChartType#getSize <em>Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Size</em>'.
   * @see ck2xtext.gfx.ck2gfx.LineChartType#getSize()
   * @see #getLineChartType()
   * @generated
   */
  EReference getLineChartType_Size();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.LineChartType#getLineWidth <em>Line Width</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Line Width</em>'.
   * @see ck2xtext.gfx.ck2gfx.LineChartType#getLineWidth()
   * @see #getLineChartType()
   * @generated
   */
  EAttribute getLineChartType_LineWidth();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.CoatOfArmsType <em>Coat Of Arms Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Coat Of Arms Type</em>'.
   * @see ck2xtext.gfx.ck2gfx.CoatOfArmsType
   * @generated
   */
  EClass getCoatOfArmsType();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.CoatOfArmsType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ck2xtext.gfx.ck2gfx.CoatOfArmsType#getName()
   * @see #getCoatOfArmsType()
   * @generated
   */
  EAttribute getCoatOfArmsType_Name();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.CoatOfArmsType#getFrame <em>Frame</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Frame</em>'.
   * @see ck2xtext.gfx.ck2gfx.CoatOfArmsType#getFrame()
   * @see #getCoatOfArmsType()
   * @generated
   */
  EAttribute getCoatOfArmsType_Frame();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.CoatOfArmsType#getMask <em>Mask</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Mask</em>'.
   * @see ck2xtext.gfx.ck2gfx.CoatOfArmsType#getMask()
   * @see #getCoatOfArmsType()
   * @generated
   */
  EAttribute getCoatOfArmsType_Mask();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.CoatOfArmsType#getSealOverlay <em>Seal Overlay</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Seal Overlay</em>'.
   * @see ck2xtext.gfx.ck2gfx.CoatOfArmsType#getSealOverlay()
   * @see #getCoatOfArmsType()
   * @generated
   */
  EAttribute getCoatOfArmsType_SealOverlay();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.CoatOfArmsType#getEffect <em>Effect</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Effect</em>'.
   * @see ck2xtext.gfx.ck2gfx.CoatOfArmsType#getEffect()
   * @see #getCoatOfArmsType()
   * @generated
   */
  EAttribute getCoatOfArmsType_Effect();

  /**
   * Returns the meta object for the containment reference list '{@link ck2xtext.gfx.ck2gfx.CoatOfArmsType#getLayers <em>Layers</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Layers</em>'.
   * @see ck2xtext.gfx.ck2gfx.CoatOfArmsType#getLayers()
   * @see #getCoatOfArmsType()
   * @generated
   */
  EReference getCoatOfArmsType_Layers();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.CoatOfArmsLayer <em>Coat Of Arms Layer</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Coat Of Arms Layer</em>'.
   * @see ck2xtext.gfx.ck2gfx.CoatOfArmsLayer
   * @generated
   */
  EClass getCoatOfArmsLayer();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.CoatOfArmsLayer#getMask <em>Mask</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Mask</em>'.
   * @see ck2xtext.gfx.ck2gfx.CoatOfArmsLayer#getMask()
   * @see #getCoatOfArmsLayer()
   * @generated
   */
  EAttribute getCoatOfArmsLayer_Mask();

  /**
   * Returns the meta object for the containment reference '{@link ck2xtext.gfx.ck2gfx.CoatOfArmsLayer#getCenter <em>Center</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Center</em>'.
   * @see ck2xtext.gfx.ck2gfx.CoatOfArmsLayer#getCenter()
   * @see #getCoatOfArmsLayer()
   * @generated
   */
  EReference getCoatOfArmsLayer_Center();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.CoatOfArmsLayer#getScale <em>Scale</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Scale</em>'.
   * @see ck2xtext.gfx.ck2gfx.CoatOfArmsLayer#getScale()
   * @see #getCoatOfArmsLayer()
   * @generated
   */
  EAttribute getCoatOfArmsLayer_Scale();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.ObjectTypes <em>Object Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Object Types</em>'.
   * @see ck2xtext.gfx.ck2gfx.ObjectTypes
   * @generated
   */
  EClass getObjectTypes();

  /**
   * Returns the meta object for the containment reference list '{@link ck2xtext.gfx.ck2gfx.ObjectTypes#getTypes <em>Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Types</em>'.
   * @see ck2xtext.gfx.ck2gfx.ObjectTypes#getTypes()
   * @see #getObjectTypes()
   * @generated
   */
  EReference getObjectTypes_Types();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.EMFXActorType <em>EMFX Actor Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>EMFX Actor Type</em>'.
   * @see ck2xtext.gfx.ck2gfx.EMFXActorType
   * @generated
   */
  EClass getEMFXActorType();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.EMFXActorType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ck2xtext.gfx.ck2gfx.EMFXActorType#getName()
   * @see #getEMFXActorType()
   * @generated
   */
  EAttribute getEMFXActorType_Name();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.EMFXActorType#getActorFile <em>Actor File</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Actor File</em>'.
   * @see ck2xtext.gfx.ck2gfx.EMFXActorType#getActorFile()
   * @see #getEMFXActorType()
   * @generated
   */
  EAttribute getEMFXActorType_ActorFile();

  /**
   * Returns the meta object for the containment reference '{@link ck2xtext.gfx.ck2gfx.EMFXActorType#getAnimation <em>Animation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Animation</em>'.
   * @see ck2xtext.gfx.ck2gfx.EMFXActorType#getAnimation()
   * @see #getEMFXActorType()
   * @generated
   */
  EReference getEMFXActorType_Animation();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.EMFXActorType#getIdle <em>Idle</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Idle</em>'.
   * @see ck2xtext.gfx.ck2gfx.EMFXActorType#getIdle()
   * @see #getEMFXActorType()
   * @generated
   */
  EAttribute getEMFXActorType_Idle();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.EMFXActorType#getMove <em>Move</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Move</em>'.
   * @see ck2xtext.gfx.ck2gfx.EMFXActorType#getMove()
   * @see #getEMFXActorType()
   * @generated
   */
  EAttribute getEMFXActorType_Move();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.EMFXActorType#getAttack <em>Attack</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Attack</em>'.
   * @see ck2xtext.gfx.ck2gfx.EMFXActorType#getAttack()
   * @see #getEMFXActorType()
   * @generated
   */
  EAttribute getEMFXActorType_Attack();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.EMFXActorType#getScale <em>Scale</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Scale</em>'.
   * @see ck2xtext.gfx.ck2gfx.EMFXActorType#getScale()
   * @see #getEMFXActorType()
   * @generated
   */
  EAttribute getEMFXActorType_Scale();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.EMFXActorType#isUseAnimation <em>Use Animation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Use Animation</em>'.
   * @see ck2xtext.gfx.ck2gfx.EMFXActorType#isUseAnimation()
   * @see #getEMFXActorType()
   * @generated
   */
  EAttribute getEMFXActorType_UseAnimation();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.EMFXActorType#getCullDistance <em>Cull Distance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Cull Distance</em>'.
   * @see ck2xtext.gfx.ck2gfx.EMFXActorType#getCullDistance()
   * @see #getEMFXActorType()
   * @generated
   */
  EAttribute getEMFXActorType_CullDistance();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.EMFXActorType#isScaleOnCullDistance <em>Scale On Cull Distance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Scale On Cull Distance</em>'.
   * @see ck2xtext.gfx.ck2gfx.EMFXActorType#isScaleOnCullDistance()
   * @see #getEMFXActorType()
   * @generated
   */
  EAttribute getEMFXActorType_ScaleOnCullDistance();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.Animation <em>Animation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Animation</em>'.
   * @see ck2xtext.gfx.ck2gfx.Animation
   * @generated
   */
  EClass getAnimation();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.Animation#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ck2xtext.gfx.ck2gfx.Animation#getName()
   * @see #getAnimation()
   * @generated
   */
  EAttribute getAnimation_Name();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.Animation#getFile <em>File</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>File</em>'.
   * @see ck2xtext.gfx.ck2gfx.Animation#getFile()
   * @see #getAnimation()
   * @generated
   */
  EAttribute getAnimation_File();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.Animation#getDefaultAnimationTime <em>Default Animation Time</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Default Animation Time</em>'.
   * @see ck2xtext.gfx.ck2gfx.Animation#getDefaultAnimationTime()
   * @see #getAnimation()
   * @generated
   */
  EAttribute getAnimation_DefaultAnimationTime();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.Pdxmesh <em>Pdxmesh</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pdxmesh</em>'.
   * @see ck2xtext.gfx.ck2gfx.Pdxmesh
   * @generated
   */
  EClass getPdxmesh();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.Pdxmesh#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ck2xtext.gfx.ck2gfx.Pdxmesh#getName()
   * @see #getPdxmesh()
   * @generated
   */
  EAttribute getPdxmesh_Name();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.Pdxmesh#getActorFile <em>Actor File</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Actor File</em>'.
   * @see ck2xtext.gfx.ck2gfx.Pdxmesh#getActorFile()
   * @see #getPdxmesh()
   * @generated
   */
  EAttribute getPdxmesh_ActorFile();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.Pdxmesh#getScale <em>Scale</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Scale</em>'.
   * @see ck2xtext.gfx.ck2gfx.Pdxmesh#getScale()
   * @see #getPdxmesh()
   * @generated
   */
  EAttribute getPdxmesh_Scale();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.Pdxmesh#getCullDistance <em>Cull Distance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Cull Distance</em>'.
   * @see ck2xtext.gfx.ck2gfx.Pdxmesh#getCullDistance()
   * @see #getPdxmesh()
   * @generated
   */
  EAttribute getPdxmesh_CullDistance();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.ArrowType <em>Arrow Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Arrow Type</em>'.
   * @see ck2xtext.gfx.ck2gfx.ArrowType
   * @generated
   */
  EClass getArrowType();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ArrowType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ck2xtext.gfx.ck2gfx.ArrowType#getName()
   * @see #getArrowType()
   * @generated
   */
  EAttribute getArrowType_Name();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ArrowType#getSize <em>Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Size</em>'.
   * @see ck2xtext.gfx.ck2gfx.ArrowType#getSize()
   * @see #getArrowType()
   * @generated
   */
  EAttribute getArrowType_Size();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ArrowType#getTextureFile <em>Texture File</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Texture File</em>'.
   * @see ck2xtext.gfx.ck2gfx.ArrowType#getTextureFile()
   * @see #getArrowType()
   * @generated
   */
  EAttribute getArrowType_TextureFile();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ArrowType#getBodyTexture <em>Body Texture</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Body Texture</em>'.
   * @see ck2xtext.gfx.ck2gfx.ArrowType#getBodyTexture()
   * @see #getArrowType()
   * @generated
   */
  EAttribute getArrowType_BodyTexture();

  /**
   * Returns the meta object for the containment reference '{@link ck2xtext.gfx.ck2gfx.ArrowType#getColor <em>Color</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Color</em>'.
   * @see ck2xtext.gfx.ck2gfx.ArrowType#getColor()
   * @see #getArrowType()
   * @generated
   */
  EReference getArrowType_Color();

  /**
   * Returns the meta object for the containment reference '{@link ck2xtext.gfx.ck2gfx.ArrowType#getColor2 <em>Color2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Color2</em>'.
   * @see ck2xtext.gfx.ck2gfx.ArrowType#getColor2()
   * @see #getArrowType()
   * @generated
   */
  EReference getArrowType_Color2();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ArrowType#getEndAt <em>End At</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>End At</em>'.
   * @see ck2xtext.gfx.ck2gfx.ArrowType#getEndAt()
   * @see #getArrowType()
   * @generated
   */
  EAttribute getArrowType_EndAt();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ArrowType#getHeight <em>Height</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Height</em>'.
   * @see ck2xtext.gfx.ck2gfx.ArrowType#getHeight()
   * @see #getArrowType()
   * @generated
   */
  EAttribute getArrowType_Height();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ArrowType#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see ck2xtext.gfx.ck2gfx.ArrowType#getType()
   * @see #getArrowType()
   * @generated
   */
  EAttribute getArrowType_Type();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ArrowType#getHeading <em>Heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Heading</em>'.
   * @see ck2xtext.gfx.ck2gfx.ArrowType#getHeading()
   * @see #getArrowType()
   * @generated
   */
  EAttribute getArrowType_Heading();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ArrowType#getEffect <em>Effect</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Effect</em>'.
   * @see ck2xtext.gfx.ck2gfx.ArrowType#getEffect()
   * @see #getArrowType()
   * @generated
   */
  EAttribute getArrowType_Effect();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.BitmapFonts <em>Bitmap Fonts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bitmap Fonts</em>'.
   * @see ck2xtext.gfx.ck2gfx.BitmapFonts
   * @generated
   */
  EClass getBitmapFonts();

  /**
   * Returns the meta object for the containment reference list '{@link ck2xtext.gfx.ck2gfx.BitmapFonts#getTypes <em>Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Types</em>'.
   * @see ck2xtext.gfx.ck2gfx.BitmapFonts#getTypes()
   * @see #getBitmapFonts()
   * @generated
   */
  EReference getBitmapFonts_Types();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.BitmapFont <em>Bitmap Font</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bitmap Font</em>'.
   * @see ck2xtext.gfx.ck2gfx.BitmapFont
   * @generated
   */
  EClass getBitmapFont();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.BitmapFont#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ck2xtext.gfx.ck2gfx.BitmapFont#getName()
   * @see #getBitmapFont()
   * @generated
   */
  EAttribute getBitmapFont_Name();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.BitmapFont#getFontName <em>Font Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Font Name</em>'.
   * @see ck2xtext.gfx.ck2gfx.BitmapFont#getFontName()
   * @see #getBitmapFont()
   * @generated
   */
  EAttribute getBitmapFont_FontName();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.BitmapFont#getColor <em>Color</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Color</em>'.
   * @see ck2xtext.gfx.ck2gfx.BitmapFont#getColor()
   * @see #getBitmapFont()
   * @generated
   */
  EAttribute getBitmapFont_Color();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.BitmapFont#isEffect <em>Effect</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Effect</em>'.
   * @see ck2xtext.gfx.ck2gfx.BitmapFont#isEffect()
   * @see #getBitmapFont()
   * @generated
   */
  EAttribute getBitmapFont_Effect();

  /**
   * Returns the meta object for the containment reference list '{@link ck2xtext.gfx.ck2gfx.BitmapFont#getColorcodes <em>Colorcodes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Colorcodes</em>'.
   * @see ck2xtext.gfx.ck2gfx.BitmapFont#getColorcodes()
   * @see #getBitmapFont()
   * @generated
   */
  EReference getBitmapFont_Colorcodes();

  /**
   * Returns the meta object for class '{@link ck2xtext.gfx.ck2gfx.ColorCode <em>Color Code</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Color Code</em>'.
   * @see ck2xtext.gfx.ck2gfx.ColorCode
   * @generated
   */
  EClass getColorCode();

  /**
   * Returns the meta object for the attribute '{@link ck2xtext.gfx.ck2gfx.ColorCode#getKey <em>Key</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Key</em>'.
   * @see ck2xtext.gfx.ck2gfx.ColorCode#getKey()
   * @see #getColorCode()
   * @generated
   */
  EAttribute getColorCode_Key();

  /**
   * Returns the meta object for the containment reference '{@link ck2xtext.gfx.ck2gfx.ColorCode#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see ck2xtext.gfx.ck2gfx.ColorCode#getValue()
   * @see #getColorCode()
   * @generated
   */
  EReference getColorCode_Value();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  Ck2gfxFactory getCk2gfxFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.ModelImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Types</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__TYPES = eINSTANCE.getModel_Types();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.ColorImpl <em>Color</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.ColorImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getColor()
     * @generated
     */
    EClass COLOR = eINSTANCE.getColor();

    /**
     * The meta object literal for the '<em><b>R</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLOR__R = eINSTANCE.getColor_R();

    /**
     * The meta object literal for the '<em><b>G</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLOR__G = eINSTANCE.getColor_G();

    /**
     * The meta object literal for the '<em><b>B</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLOR__B = eINSTANCE.getColor_B();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.ColorRatioImpl <em>Color Ratio</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.ColorRatioImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getColorRatio()
     * @generated
     */
    EClass COLOR_RATIO = eINSTANCE.getColorRatio();

    /**
     * The meta object literal for the '<em><b>R</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLOR_RATIO__R = eINSTANCE.getColorRatio_R();

    /**
     * The meta object literal for the '<em><b>G</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLOR_RATIO__G = eINSTANCE.getColorRatio_G();

    /**
     * The meta object literal for the '<em><b>B</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLOR_RATIO__B = eINSTANCE.getColorRatio_B();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.CoordinatesImpl <em>Coordinates</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.CoordinatesImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getCoordinates()
     * @generated
     */
    EClass COORDINATES = eINSTANCE.getCoordinates();

    /**
     * The meta object literal for the '<em><b>X</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COORDINATES__X = eINSTANCE.getCoordinates_X();

    /**
     * The meta object literal for the '<em><b>Y</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COORDINATES__Y = eINSTANCE.getCoordinates_Y();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.SpriteTypesImpl <em>Sprite Types</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.SpriteTypesImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getSpriteTypes()
     * @generated
     */
    EClass SPRITE_TYPES = eINSTANCE.getSpriteTypes();

    /**
     * The meta object literal for the '<em><b>Types</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SPRITE_TYPES__TYPES = eINSTANCE.getSpriteTypes_Types();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.SpriteTypeImpl <em>Sprite Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.SpriteTypeImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getSpriteType()
     * @generated
     */
    EClass SPRITE_TYPE = eINSTANCE.getSpriteType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SPRITE_TYPE__NAME = eINSTANCE.getSpriteType_Name();

    /**
     * The meta object literal for the '<em><b>Texturefile</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SPRITE_TYPE__TEXTUREFILE = eINSTANCE.getSpriteType_Texturefile();

    /**
     * The meta object literal for the '<em><b>Effect File</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SPRITE_TYPE__EFFECT_FILE = eINSTANCE.getSpriteType_EffectFile();

    /**
     * The meta object literal for the '<em><b>Allways Transparent</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SPRITE_TYPE__ALLWAYS_TRANSPARENT = eINSTANCE.getSpriteType_AllwaysTransparent();

    /**
     * The meta object literal for the '<em><b>No Of Frames</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SPRITE_TYPE__NO_OF_FRAMES = eINSTANCE.getSpriteType_NoOfFrames();

    /**
     * The meta object literal for the '<em><b>No Ref Count</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SPRITE_TYPE__NO_REF_COUNT = eINSTANCE.getSpriteType_NoRefCount();

    /**
     * The meta object literal for the '<em><b>Transparence Check</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SPRITE_TYPE__TRANSPARENCE_CHECK = eINSTANCE.getSpriteType_TransparenceCheck();

    /**
     * The meta object literal for the '<em><b>Can Be Lowres</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SPRITE_TYPE__CAN_BE_LOWRES = eINSTANCE.getSpriteType_CanBeLowres();

    /**
     * The meta object literal for the '<em><b>Click Sound</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SPRITE_TYPE__CLICK_SOUND = eINSTANCE.getSpriteType_ClickSound();

    /**
     * The meta object literal for the '<em><b>Load Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SPRITE_TYPE__LOAD_TYPE = eINSTANCE.getSpriteType_LoadType();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.AnimatedSpriteTypeImpl <em>Animated Sprite Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.AnimatedSpriteTypeImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getAnimatedSpriteType()
     * @generated
     */
    EClass ANIMATED_SPRITE_TYPE = eINSTANCE.getAnimatedSpriteType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ANIMATED_SPRITE_TYPE__NAME = eINSTANCE.getAnimatedSpriteType_Name();

    /**
     * The meta object literal for the '<em><b>Texturefile</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ANIMATED_SPRITE_TYPE__TEXTUREFILE = eINSTANCE.getAnimatedSpriteType_Texturefile();

    /**
     * The meta object literal for the '<em><b>No Of Frames</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ANIMATED_SPRITE_TYPE__NO_OF_FRAMES = eINSTANCE.getAnimatedSpriteType_NoOfFrames();

    /**
     * The meta object literal for the '<em><b>Animation Rate Fps</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ANIMATED_SPRITE_TYPE__ANIMATION_RATE_FPS = eINSTANCE.getAnimatedSpriteType_AnimationRateFps();

    /**
     * The meta object literal for the '<em><b>Looping</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ANIMATED_SPRITE_TYPE__LOOPING = eINSTANCE.getAnimatedSpriteType_Looping();

    /**
     * The meta object literal for the '<em><b>Play On Show</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ANIMATED_SPRITE_TYPE__PLAY_ON_SHOW = eINSTANCE.getAnimatedSpriteType_PlayOnShow();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.CorneredTileSpriteTypeImpl <em>Cornered Tile Sprite Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.CorneredTileSpriteTypeImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getCorneredTileSpriteType()
     * @generated
     */
    EClass CORNERED_TILE_SPRITE_TYPE = eINSTANCE.getCorneredTileSpriteType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CORNERED_TILE_SPRITE_TYPE__NAME = eINSTANCE.getCorneredTileSpriteType_Name();

    /**
     * The meta object literal for the '<em><b>Size</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CORNERED_TILE_SPRITE_TYPE__SIZE = eINSTANCE.getCorneredTileSpriteType_Size();

    /**
     * The meta object literal for the '<em><b>Texturefile</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CORNERED_TILE_SPRITE_TYPE__TEXTUREFILE = eINSTANCE.getCorneredTileSpriteType_Texturefile();

    /**
     * The meta object literal for the '<em><b>Border Size</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CORNERED_TILE_SPRITE_TYPE__BORDER_SIZE = eINSTANCE.getCorneredTileSpriteType_BorderSize();

    /**
     * The meta object literal for the '<em><b>Load Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CORNERED_TILE_SPRITE_TYPE__LOAD_TYPE = eINSTANCE.getCorneredTileSpriteType_LoadType();

    /**
     * The meta object literal for the '<em><b>Tiling Center</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CORNERED_TILE_SPRITE_TYPE__TILING_CENTER = eINSTANCE.getCorneredTileSpriteType_TilingCenter();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.ProgressbarTypeImpl <em>Progressbar Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.ProgressbarTypeImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getProgressbarType()
     * @generated
     */
    EClass PROGRESSBAR_TYPE = eINSTANCE.getProgressbarType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROGRESSBAR_TYPE__NAME = eINSTANCE.getProgressbarType_Name();

    /**
     * The meta object literal for the '<em><b>Color</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRESSBAR_TYPE__COLOR = eINSTANCE.getProgressbarType_Color();

    /**
     * The meta object literal for the '<em><b>Color2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRESSBAR_TYPE__COLOR2 = eINSTANCE.getProgressbarType_Color2();

    /**
     * The meta object literal for the '<em><b>Texture File1</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROGRESSBAR_TYPE__TEXTURE_FILE1 = eINSTANCE.getProgressbarType_TextureFile1();

    /**
     * The meta object literal for the '<em><b>Texture File2</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROGRESSBAR_TYPE__TEXTURE_FILE2 = eINSTANCE.getProgressbarType_TextureFile2();

    /**
     * The meta object literal for the '<em><b>Size</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRESSBAR_TYPE__SIZE = eINSTANCE.getProgressbarType_Size();

    /**
     * The meta object literal for the '<em><b>Horizontal</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROGRESSBAR_TYPE__HORIZONTAL = eINSTANCE.getProgressbarType_Horizontal();

    /**
     * The meta object literal for the '<em><b>Effect File</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROGRESSBAR_TYPE__EFFECT_FILE = eINSTANCE.getProgressbarType_EffectFile();

    /**
     * The meta object literal for the '<em><b>Allways Transparent</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROGRESSBAR_TYPE__ALLWAYS_TRANSPARENT = eINSTANCE.getProgressbarType_AllwaysTransparent();

    /**
     * The meta object literal for the '<em><b>Max Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROGRESSBAR_TYPE__MAX_VALUE = eINSTANCE.getProgressbarType_MaxValue();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.PortraitTypeImpl <em>Portrait Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.PortraitTypeImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getPortraitType()
     * @generated
     */
    EClass PORTRAIT_TYPE = eINSTANCE.getPortraitType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PORTRAIT_TYPE__NAME = eINSTANCE.getPortraitType_Name();

    /**
     * The meta object literal for the '<em><b>Effect File</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PORTRAIT_TYPE__EFFECT_FILE = eINSTANCE.getPortraitType_EffectFile();

    /**
     * The meta object literal for the '<em><b>Layers</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PORTRAIT_TYPE__LAYERS = eINSTANCE.getPortraitType_Layers();

    /**
     * The meta object literal for the '<em><b>Hair Color Index</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PORTRAIT_TYPE__HAIR_COLOR_INDEX = eINSTANCE.getPortraitType_HairColorIndex();

    /**
     * The meta object literal for the '<em><b>Hair Color</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PORTRAIT_TYPE__HAIR_COLOR = eINSTANCE.getPortraitType_HairColor();

    /**
     * The meta object literal for the '<em><b>Eye Color Index</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PORTRAIT_TYPE__EYE_COLOR_INDEX = eINSTANCE.getPortraitType_EyeColorIndex();

    /**
     * The meta object literal for the '<em><b>Eye Color</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PORTRAIT_TYPE__EYE_COLOR = eINSTANCE.getPortraitType_EyeColor();

    /**
     * The meta object literal for the '<em><b>Headgear That Hides Hair</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PORTRAIT_TYPE__HEADGEAR_THAT_HIDES_HAIR = eINSTANCE.getPortraitType_HeadgearThatHidesHair();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.MaskedShieldTypeImpl <em>Masked Shield Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.MaskedShieldTypeImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getMaskedShieldType()
     * @generated
     */
    EClass MASKED_SHIELD_TYPE = eINSTANCE.getMaskedShieldType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MASKED_SHIELD_TYPE__NAME = eINSTANCE.getMaskedShieldType_Name();

    /**
     * The meta object literal for the '<em><b>Texture File1</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MASKED_SHIELD_TYPE__TEXTURE_FILE1 = eINSTANCE.getMaskedShieldType_TextureFile1();

    /**
     * The meta object literal for the '<em><b>Texture File2</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MASKED_SHIELD_TYPE__TEXTURE_FILE2 = eINSTANCE.getMaskedShieldType_TextureFile2();

    /**
     * The meta object literal for the '<em><b>Effect File</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MASKED_SHIELD_TYPE__EFFECT_FILE = eINSTANCE.getMaskedShieldType_EffectFile();

    /**
     * The meta object literal for the '<em><b>Allways Transparent</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MASKED_SHIELD_TYPE__ALLWAYS_TRANSPARENT = eINSTANCE.getMaskedShieldType_AllwaysTransparent();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.LineChartTypeImpl <em>Line Chart Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.LineChartTypeImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getLineChartType()
     * @generated
     */
    EClass LINE_CHART_TYPE = eINSTANCE.getLineChartType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LINE_CHART_TYPE__NAME = eINSTANCE.getLineChartType_Name();

    /**
     * The meta object literal for the '<em><b>Size</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LINE_CHART_TYPE__SIZE = eINSTANCE.getLineChartType_Size();

    /**
     * The meta object literal for the '<em><b>Line Width</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LINE_CHART_TYPE__LINE_WIDTH = eINSTANCE.getLineChartType_LineWidth();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.CoatOfArmsTypeImpl <em>Coat Of Arms Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.CoatOfArmsTypeImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getCoatOfArmsType()
     * @generated
     */
    EClass COAT_OF_ARMS_TYPE = eINSTANCE.getCoatOfArmsType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COAT_OF_ARMS_TYPE__NAME = eINSTANCE.getCoatOfArmsType_Name();

    /**
     * The meta object literal for the '<em><b>Frame</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COAT_OF_ARMS_TYPE__FRAME = eINSTANCE.getCoatOfArmsType_Frame();

    /**
     * The meta object literal for the '<em><b>Mask</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COAT_OF_ARMS_TYPE__MASK = eINSTANCE.getCoatOfArmsType_Mask();

    /**
     * The meta object literal for the '<em><b>Seal Overlay</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COAT_OF_ARMS_TYPE__SEAL_OVERLAY = eINSTANCE.getCoatOfArmsType_SealOverlay();

    /**
     * The meta object literal for the '<em><b>Effect</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COAT_OF_ARMS_TYPE__EFFECT = eINSTANCE.getCoatOfArmsType_Effect();

    /**
     * The meta object literal for the '<em><b>Layers</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COAT_OF_ARMS_TYPE__LAYERS = eINSTANCE.getCoatOfArmsType_Layers();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.CoatOfArmsLayerImpl <em>Coat Of Arms Layer</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.CoatOfArmsLayerImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getCoatOfArmsLayer()
     * @generated
     */
    EClass COAT_OF_ARMS_LAYER = eINSTANCE.getCoatOfArmsLayer();

    /**
     * The meta object literal for the '<em><b>Mask</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COAT_OF_ARMS_LAYER__MASK = eINSTANCE.getCoatOfArmsLayer_Mask();

    /**
     * The meta object literal for the '<em><b>Center</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COAT_OF_ARMS_LAYER__CENTER = eINSTANCE.getCoatOfArmsLayer_Center();

    /**
     * The meta object literal for the '<em><b>Scale</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COAT_OF_ARMS_LAYER__SCALE = eINSTANCE.getCoatOfArmsLayer_Scale();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.ObjectTypesImpl <em>Object Types</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.ObjectTypesImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getObjectTypes()
     * @generated
     */
    EClass OBJECT_TYPES = eINSTANCE.getObjectTypes();

    /**
     * The meta object literal for the '<em><b>Types</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OBJECT_TYPES__TYPES = eINSTANCE.getObjectTypes_Types();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.EMFXActorTypeImpl <em>EMFX Actor Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.EMFXActorTypeImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getEMFXActorType()
     * @generated
     */
    EClass EMFX_ACTOR_TYPE = eINSTANCE.getEMFXActorType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EMFX_ACTOR_TYPE__NAME = eINSTANCE.getEMFXActorType_Name();

    /**
     * The meta object literal for the '<em><b>Actor File</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EMFX_ACTOR_TYPE__ACTOR_FILE = eINSTANCE.getEMFXActorType_ActorFile();

    /**
     * The meta object literal for the '<em><b>Animation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EMFX_ACTOR_TYPE__ANIMATION = eINSTANCE.getEMFXActorType_Animation();

    /**
     * The meta object literal for the '<em><b>Idle</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EMFX_ACTOR_TYPE__IDLE = eINSTANCE.getEMFXActorType_Idle();

    /**
     * The meta object literal for the '<em><b>Move</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EMFX_ACTOR_TYPE__MOVE = eINSTANCE.getEMFXActorType_Move();

    /**
     * The meta object literal for the '<em><b>Attack</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EMFX_ACTOR_TYPE__ATTACK = eINSTANCE.getEMFXActorType_Attack();

    /**
     * The meta object literal for the '<em><b>Scale</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EMFX_ACTOR_TYPE__SCALE = eINSTANCE.getEMFXActorType_Scale();

    /**
     * The meta object literal for the '<em><b>Use Animation</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EMFX_ACTOR_TYPE__USE_ANIMATION = eINSTANCE.getEMFXActorType_UseAnimation();

    /**
     * The meta object literal for the '<em><b>Cull Distance</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EMFX_ACTOR_TYPE__CULL_DISTANCE = eINSTANCE.getEMFXActorType_CullDistance();

    /**
     * The meta object literal for the '<em><b>Scale On Cull Distance</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EMFX_ACTOR_TYPE__SCALE_ON_CULL_DISTANCE = eINSTANCE.getEMFXActorType_ScaleOnCullDistance();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.AnimationImpl <em>Animation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.AnimationImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getAnimation()
     * @generated
     */
    EClass ANIMATION = eINSTANCE.getAnimation();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ANIMATION__NAME = eINSTANCE.getAnimation_Name();

    /**
     * The meta object literal for the '<em><b>File</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ANIMATION__FILE = eINSTANCE.getAnimation_File();

    /**
     * The meta object literal for the '<em><b>Default Animation Time</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ANIMATION__DEFAULT_ANIMATION_TIME = eINSTANCE.getAnimation_DefaultAnimationTime();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.PdxmeshImpl <em>Pdxmesh</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.PdxmeshImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getPdxmesh()
     * @generated
     */
    EClass PDXMESH = eINSTANCE.getPdxmesh();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PDXMESH__NAME = eINSTANCE.getPdxmesh_Name();

    /**
     * The meta object literal for the '<em><b>Actor File</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PDXMESH__ACTOR_FILE = eINSTANCE.getPdxmesh_ActorFile();

    /**
     * The meta object literal for the '<em><b>Scale</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PDXMESH__SCALE = eINSTANCE.getPdxmesh_Scale();

    /**
     * The meta object literal for the '<em><b>Cull Distance</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PDXMESH__CULL_DISTANCE = eINSTANCE.getPdxmesh_CullDistance();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.ArrowTypeImpl <em>Arrow Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.ArrowTypeImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getArrowType()
     * @generated
     */
    EClass ARROW_TYPE = eINSTANCE.getArrowType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARROW_TYPE__NAME = eINSTANCE.getArrowType_Name();

    /**
     * The meta object literal for the '<em><b>Size</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARROW_TYPE__SIZE = eINSTANCE.getArrowType_Size();

    /**
     * The meta object literal for the '<em><b>Texture File</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARROW_TYPE__TEXTURE_FILE = eINSTANCE.getArrowType_TextureFile();

    /**
     * The meta object literal for the '<em><b>Body Texture</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARROW_TYPE__BODY_TEXTURE = eINSTANCE.getArrowType_BodyTexture();

    /**
     * The meta object literal for the '<em><b>Color</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARROW_TYPE__COLOR = eINSTANCE.getArrowType_Color();

    /**
     * The meta object literal for the '<em><b>Color2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARROW_TYPE__COLOR2 = eINSTANCE.getArrowType_Color2();

    /**
     * The meta object literal for the '<em><b>End At</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARROW_TYPE__END_AT = eINSTANCE.getArrowType_EndAt();

    /**
     * The meta object literal for the '<em><b>Height</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARROW_TYPE__HEIGHT = eINSTANCE.getArrowType_Height();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARROW_TYPE__TYPE = eINSTANCE.getArrowType_Type();

    /**
     * The meta object literal for the '<em><b>Heading</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARROW_TYPE__HEADING = eINSTANCE.getArrowType_Heading();

    /**
     * The meta object literal for the '<em><b>Effect</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ARROW_TYPE__EFFECT = eINSTANCE.getArrowType_Effect();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.BitmapFontsImpl <em>Bitmap Fonts</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.BitmapFontsImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getBitmapFonts()
     * @generated
     */
    EClass BITMAP_FONTS = eINSTANCE.getBitmapFonts();

    /**
     * The meta object literal for the '<em><b>Types</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BITMAP_FONTS__TYPES = eINSTANCE.getBitmapFonts_Types();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.BitmapFontImpl <em>Bitmap Font</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.BitmapFontImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getBitmapFont()
     * @generated
     */
    EClass BITMAP_FONT = eINSTANCE.getBitmapFont();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BITMAP_FONT__NAME = eINSTANCE.getBitmapFont_Name();

    /**
     * The meta object literal for the '<em><b>Font Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BITMAP_FONT__FONT_NAME = eINSTANCE.getBitmapFont_FontName();

    /**
     * The meta object literal for the '<em><b>Color</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BITMAP_FONT__COLOR = eINSTANCE.getBitmapFont_Color();

    /**
     * The meta object literal for the '<em><b>Effect</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BITMAP_FONT__EFFECT = eINSTANCE.getBitmapFont_Effect();

    /**
     * The meta object literal for the '<em><b>Colorcodes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BITMAP_FONT__COLORCODES = eINSTANCE.getBitmapFont_Colorcodes();

    /**
     * The meta object literal for the '{@link ck2xtext.gfx.ck2gfx.impl.ColorCodeImpl <em>Color Code</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ck2xtext.gfx.ck2gfx.impl.ColorCodeImpl
     * @see ck2xtext.gfx.ck2gfx.impl.Ck2gfxPackageImpl#getColorCode()
     * @generated
     */
    EClass COLOR_CODE = eINSTANCE.getColorCode();

    /**
     * The meta object literal for the '<em><b>Key</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLOR_CODE__KEY = eINSTANCE.getColorCode_Key();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COLOR_CODE__VALUE = eINSTANCE.getColorCode_Value();

  }

} //Ck2gfxPackage
