/**
 * generated by Xtext 2.15.0
 */
package ck2xtext.gfx.ck2gfx.impl;

import ck2xtext.gfx.ck2gfx.AnimatedSpriteType;
import ck2xtext.gfx.ck2gfx.Ck2gfxPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Animated Sprite Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ck2xtext.gfx.ck2gfx.impl.AnimatedSpriteTypeImpl#getName <em>Name</em>}</li>
 *   <li>{@link ck2xtext.gfx.ck2gfx.impl.AnimatedSpriteTypeImpl#getTexturefile <em>Texturefile</em>}</li>
 *   <li>{@link ck2xtext.gfx.ck2gfx.impl.AnimatedSpriteTypeImpl#getNoOfFrames <em>No Of Frames</em>}</li>
 *   <li>{@link ck2xtext.gfx.ck2gfx.impl.AnimatedSpriteTypeImpl#getAnimationRateFps <em>Animation Rate Fps</em>}</li>
 *   <li>{@link ck2xtext.gfx.ck2gfx.impl.AnimatedSpriteTypeImpl#isLooping <em>Looping</em>}</li>
 *   <li>{@link ck2xtext.gfx.ck2gfx.impl.AnimatedSpriteTypeImpl#isPlayOnShow <em>Play On Show</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AnimatedSpriteTypeImpl extends MinimalEObjectImpl.Container implements AnimatedSpriteType
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getTexturefile() <em>Texturefile</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTexturefile()
   * @generated
   * @ordered
   */
  protected static final String TEXTUREFILE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTexturefile() <em>Texturefile</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTexturefile()
   * @generated
   * @ordered
   */
  protected String texturefile = TEXTUREFILE_EDEFAULT;

  /**
   * The default value of the '{@link #getNoOfFrames() <em>No Of Frames</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNoOfFrames()
   * @generated
   * @ordered
   */
  protected static final int NO_OF_FRAMES_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getNoOfFrames() <em>No Of Frames</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNoOfFrames()
   * @generated
   * @ordered
   */
  protected int noOfFrames = NO_OF_FRAMES_EDEFAULT;

  /**
   * The default value of the '{@link #getAnimationRateFps() <em>Animation Rate Fps</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnimationRateFps()
   * @generated
   * @ordered
   */
  protected static final double ANIMATION_RATE_FPS_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getAnimationRateFps() <em>Animation Rate Fps</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnimationRateFps()
   * @generated
   * @ordered
   */
  protected double animationRateFps = ANIMATION_RATE_FPS_EDEFAULT;

  /**
   * The default value of the '{@link #isLooping() <em>Looping</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLooping()
   * @generated
   * @ordered
   */
  protected static final boolean LOOPING_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isLooping() <em>Looping</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLooping()
   * @generated
   * @ordered
   */
  protected boolean looping = LOOPING_EDEFAULT;

  /**
   * The default value of the '{@link #isPlayOnShow() <em>Play On Show</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPlayOnShow()
   * @generated
   * @ordered
   */
  protected static final boolean PLAY_ON_SHOW_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isPlayOnShow() <em>Play On Show</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPlayOnShow()
   * @generated
   * @ordered
   */
  protected boolean playOnShow = PLAY_ON_SHOW_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AnimatedSpriteTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Ck2gfxPackage.Literals.ANIMATED_SPRITE_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Ck2gfxPackage.ANIMATED_SPRITE_TYPE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTexturefile()
  {
    return texturefile;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTexturefile(String newTexturefile)
  {
    String oldTexturefile = texturefile;
    texturefile = newTexturefile;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Ck2gfxPackage.ANIMATED_SPRITE_TYPE__TEXTUREFILE, oldTexturefile, texturefile));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getNoOfFrames()
  {
    return noOfFrames;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNoOfFrames(int newNoOfFrames)
  {
    int oldNoOfFrames = noOfFrames;
    noOfFrames = newNoOfFrames;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Ck2gfxPackage.ANIMATED_SPRITE_TYPE__NO_OF_FRAMES, oldNoOfFrames, noOfFrames));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public double getAnimationRateFps()
  {
    return animationRateFps;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAnimationRateFps(double newAnimationRateFps)
  {
    double oldAnimationRateFps = animationRateFps;
    animationRateFps = newAnimationRateFps;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Ck2gfxPackage.ANIMATED_SPRITE_TYPE__ANIMATION_RATE_FPS, oldAnimationRateFps, animationRateFps));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isLooping()
  {
    return looping;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLooping(boolean newLooping)
  {
    boolean oldLooping = looping;
    looping = newLooping;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Ck2gfxPackage.ANIMATED_SPRITE_TYPE__LOOPING, oldLooping, looping));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isPlayOnShow()
  {
    return playOnShow;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPlayOnShow(boolean newPlayOnShow)
  {
    boolean oldPlayOnShow = playOnShow;
    playOnShow = newPlayOnShow;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Ck2gfxPackage.ANIMATED_SPRITE_TYPE__PLAY_ON_SHOW, oldPlayOnShow, playOnShow));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__NAME:
        return getName();
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__TEXTUREFILE:
        return getTexturefile();
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__NO_OF_FRAMES:
        return getNoOfFrames();
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__ANIMATION_RATE_FPS:
        return getAnimationRateFps();
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__LOOPING:
        return isLooping();
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__PLAY_ON_SHOW:
        return isPlayOnShow();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__NAME:
        setName((String)newValue);
        return;
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__TEXTUREFILE:
        setTexturefile((String)newValue);
        return;
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__NO_OF_FRAMES:
        setNoOfFrames((Integer)newValue);
        return;
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__ANIMATION_RATE_FPS:
        setAnimationRateFps((Double)newValue);
        return;
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__LOOPING:
        setLooping((Boolean)newValue);
        return;
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__PLAY_ON_SHOW:
        setPlayOnShow((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__TEXTUREFILE:
        setTexturefile(TEXTUREFILE_EDEFAULT);
        return;
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__NO_OF_FRAMES:
        setNoOfFrames(NO_OF_FRAMES_EDEFAULT);
        return;
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__ANIMATION_RATE_FPS:
        setAnimationRateFps(ANIMATION_RATE_FPS_EDEFAULT);
        return;
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__LOOPING:
        setLooping(LOOPING_EDEFAULT);
        return;
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__PLAY_ON_SHOW:
        setPlayOnShow(PLAY_ON_SHOW_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__TEXTUREFILE:
        return TEXTUREFILE_EDEFAULT == null ? texturefile != null : !TEXTUREFILE_EDEFAULT.equals(texturefile);
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__NO_OF_FRAMES:
        return noOfFrames != NO_OF_FRAMES_EDEFAULT;
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__ANIMATION_RATE_FPS:
        return animationRateFps != ANIMATION_RATE_FPS_EDEFAULT;
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__LOOPING:
        return looping != LOOPING_EDEFAULT;
      case Ck2gfxPackage.ANIMATED_SPRITE_TYPE__PLAY_ON_SHOW:
        return playOnShow != PLAY_ON_SHOW_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", texturefile: ");
    result.append(texturefile);
    result.append(", noOfFrames: ");
    result.append(noOfFrames);
    result.append(", animationRateFps: ");
    result.append(animationRateFps);
    result.append(", looping: ");
    result.append(looping);
    result.append(", playOnShow: ");
    result.append(playOnShow);
    result.append(')');
    return result.toString();
  }

} //AnimatedSpriteTypeImpl
