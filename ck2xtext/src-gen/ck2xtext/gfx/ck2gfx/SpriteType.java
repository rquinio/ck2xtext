/**
 * generated by Xtext 2.14.0
 */
package ck2xtext.gfx.ck2gfx;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Sprite Type</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link ck2xtext.gfx.ck2gfx.SpriteType#getName <em>Name</em>}</li>
 *   <li>{@link ck2xtext.gfx.ck2gfx.SpriteType#getTextureFile <em>Texture File</em>}</li>
 *   <li>{@link ck2xtext.gfx.ck2gfx.SpriteType#getNoOfFrames <em>No Of Frames</em>}</li>
 *   <li>{@link ck2xtext.gfx.ck2gfx.SpriteType#getLoadType <em>Load Type</em>}</li>
 *   <li>{@link ck2xtext.gfx.ck2gfx.SpriteType#isAllwaysTransparent <em>Allways Transparent</em>}</li>
 *   <li>{@link ck2xtext.gfx.ck2gfx.SpriteType#isNoRefCount <em>No Ref Count</em>}</li>
 *   <li>{@link ck2xtext.gfx.ck2gfx.SpriteType#getEffectFile <em>Effect File</em>}</li>
 *   <li>{@link ck2xtext.gfx.ck2gfx.SpriteType#isTransparenceCheck <em>Transparence Check</em>}</li>
 *   <li>{@link ck2xtext.gfx.ck2gfx.SpriteType#isCanBeLowres <em>Can Be Lowres</em>}</li>
 *   <li>{@link ck2xtext.gfx.ck2gfx.SpriteType#getClickSound <em>Click Sound</em>}</li>
 * </ul>
 *
 * @see ck2xtext.gfx.ck2gfx.Ck2gfxPackage#getSpriteType()
 * @model
 * @generated
 */
public interface SpriteType extends EObject
{
  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Name</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see ck2xtext.gfx.ck2gfx.Ck2gfxPackage#getSpriteType_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link ck2xtext.gfx.ck2gfx.SpriteType#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Texture File</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Texture File</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Texture File</em>' attribute.
   * @see #setTextureFile(String)
   * @see ck2xtext.gfx.ck2gfx.Ck2gfxPackage#getSpriteType_TextureFile()
   * @model
   * @generated
   */
  String getTextureFile();

  /**
   * Sets the value of the '{@link ck2xtext.gfx.ck2gfx.SpriteType#getTextureFile <em>Texture File</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Texture File</em>' attribute.
   * @see #getTextureFile()
   * @generated
   */
  void setTextureFile(String value);

  /**
   * Returns the value of the '<em><b>No Of Frames</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>No Of Frames</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>No Of Frames</em>' attribute.
   * @see #setNoOfFrames(int)
   * @see ck2xtext.gfx.ck2gfx.Ck2gfxPackage#getSpriteType_NoOfFrames()
   * @model
   * @generated
   */
  int getNoOfFrames();

  /**
   * Sets the value of the '{@link ck2xtext.gfx.ck2gfx.SpriteType#getNoOfFrames <em>No Of Frames</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>No Of Frames</em>' attribute.
   * @see #getNoOfFrames()
   * @generated
   */
  void setNoOfFrames(int value);

  /**
   * Returns the value of the '<em><b>Load Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Load Type</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Load Type</em>' attribute.
   * @see #setLoadType(String)
   * @see ck2xtext.gfx.ck2gfx.Ck2gfxPackage#getSpriteType_LoadType()
   * @model
   * @generated
   */
  String getLoadType();

  /**
   * Sets the value of the '{@link ck2xtext.gfx.ck2gfx.SpriteType#getLoadType <em>Load Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Load Type</em>' attribute.
   * @see #getLoadType()
   * @generated
   */
  void setLoadType(String value);

  /**
   * Returns the value of the '<em><b>Allways Transparent</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Allways Transparent</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Allways Transparent</em>' attribute.
   * @see #setAllwaysTransparent(boolean)
   * @see ck2xtext.gfx.ck2gfx.Ck2gfxPackage#getSpriteType_AllwaysTransparent()
   * @model
   * @generated
   */
  boolean isAllwaysTransparent();

  /**
   * Sets the value of the '{@link ck2xtext.gfx.ck2gfx.SpriteType#isAllwaysTransparent <em>Allways Transparent</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Allways Transparent</em>' attribute.
   * @see #isAllwaysTransparent()
   * @generated
   */
  void setAllwaysTransparent(boolean value);

  /**
   * Returns the value of the '<em><b>No Ref Count</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>No Ref Count</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>No Ref Count</em>' attribute.
   * @see #setNoRefCount(boolean)
   * @see ck2xtext.gfx.ck2gfx.Ck2gfxPackage#getSpriteType_NoRefCount()
   * @model
   * @generated
   */
  boolean isNoRefCount();

  /**
   * Sets the value of the '{@link ck2xtext.gfx.ck2gfx.SpriteType#isNoRefCount <em>No Ref Count</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>No Ref Count</em>' attribute.
   * @see #isNoRefCount()
   * @generated
   */
  void setNoRefCount(boolean value);

  /**
   * Returns the value of the '<em><b>Effect File</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Effect File</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Effect File</em>' attribute.
   * @see #setEffectFile(String)
   * @see ck2xtext.gfx.ck2gfx.Ck2gfxPackage#getSpriteType_EffectFile()
   * @model
   * @generated
   */
  String getEffectFile();

  /**
   * Sets the value of the '{@link ck2xtext.gfx.ck2gfx.SpriteType#getEffectFile <em>Effect File</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Effect File</em>' attribute.
   * @see #getEffectFile()
   * @generated
   */
  void setEffectFile(String value);

  /**
   * Returns the value of the '<em><b>Transparence Check</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Transparence Check</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Transparence Check</em>' attribute.
   * @see #setTransparenceCheck(boolean)
   * @see ck2xtext.gfx.ck2gfx.Ck2gfxPackage#getSpriteType_TransparenceCheck()
   * @model
   * @generated
   */
  boolean isTransparenceCheck();

  /**
   * Sets the value of the '{@link ck2xtext.gfx.ck2gfx.SpriteType#isTransparenceCheck <em>Transparence Check</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Transparence Check</em>' attribute.
   * @see #isTransparenceCheck()
   * @generated
   */
  void setTransparenceCheck(boolean value);

  /**
   * Returns the value of the '<em><b>Can Be Lowres</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Can Be Lowres</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Can Be Lowres</em>' attribute.
   * @see #setCanBeLowres(boolean)
   * @see ck2xtext.gfx.ck2gfx.Ck2gfxPackage#getSpriteType_CanBeLowres()
   * @model
   * @generated
   */
  boolean isCanBeLowres();

  /**
   * Sets the value of the '{@link ck2xtext.gfx.ck2gfx.SpriteType#isCanBeLowres <em>Can Be Lowres</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Can Be Lowres</em>' attribute.
   * @see #isCanBeLowres()
   * @generated
   */
  void setCanBeLowres(boolean value);

  /**
   * Returns the value of the '<em><b>Click Sound</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Click Sound</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Click Sound</em>' attribute.
   * @see #setClickSound(String)
   * @see ck2xtext.gfx.ck2gfx.Ck2gfxPackage#getSpriteType_ClickSound()
   * @model
   * @generated
   */
  String getClickSound();

  /**
   * Sets the value of the '{@link ck2xtext.gfx.ck2gfx.SpriteType#getClickSound <em>Click Sound</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Click Sound</em>' attribute.
   * @see #getClickSound()
   * @generated
   */
  void setClickSound(String value);

} // SpriteType
