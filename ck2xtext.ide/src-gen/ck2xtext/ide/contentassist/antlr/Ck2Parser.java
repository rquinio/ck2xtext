/*
 * generated by Xtext 2.13.0
 */
package ck2xtext.ide.contentassist.antlr;

import ck2xtext.ide.contentassist.antlr.internal.InternalCk2Parser;
import ck2xtext.services.Ck2GrammarAccess;
import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class Ck2Parser extends AbstractContentAssistParser {

	@Inject
	private Ck2GrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalCk2Parser createParser() {
		InternalCk2Parser result = new InternalCk2Parser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getIntegerAccess().getAlternatives_0(), "rule__Integer__Alternatives_0");
					put(grammarAccess.getListElemAccess().getAlternatives(), "rule__ListElem__Alternatives");
					put(grammarAccess.getPropertyAccess().getAlternatives(), "rule__Property__Alternatives");
					put(grammarAccess.getClauseAccess().getAlternatives(), "rule__Clause__Alternatives");
					put(grammarAccess.getDateAccess().getGroup(), "rule__Date__Group__0");
					put(grammarAccess.getIntegerAccess().getGroup(), "rule__Integer__Group__0");
					put(grammarAccess.getDoubleAccess().getGroup(), "rule__Double__Group__0");
					put(grammarAccess.getListAccess().getGroup(), "rule__List__Group__0");
					put(grammarAccess.getStringPropertyAccess().getGroup(), "rule__StringProperty__Group__0");
					put(grammarAccess.getIdPropertyAccess().getGroup(), "rule__IdProperty__Group__0");
					put(grammarAccess.getCommandPropertyAccess().getGroup(), "rule__CommandProperty__Group__0");
					put(grammarAccess.getBoolPropertyAccess().getGroup(), "rule__BoolProperty__Group__0");
					put(grammarAccess.getDatePropertyAccess().getGroup(), "rule__DateProperty__Group__0");
					put(grammarAccess.getIntegerPropertyAccess().getGroup(), "rule__IntegerProperty__Group__0");
					put(grammarAccess.getDoublePropertyAccess().getGroup(), "rule__DoubleProperty__Group__0");
					put(grammarAccess.getHexadecimalPropertyAccess().getGroup(), "rule__HexadecimalProperty__Group__0");
					put(grammarAccess.getListPropertyAccess().getGroup(), "rule__ListProperty__Group__0");
					put(grammarAccess.getIdClausePropertyAccess().getGroup(), "rule__IdClauseProperty__Group__0");
					put(grammarAccess.getIntClausePropertyAccess().getGroup(), "rule__IntClauseProperty__Group__0");
					put(grammarAccess.getDateClausePropertyAccess().getGroup(), "rule__DateClauseProperty__Group__0");
					put(grammarAccess.getProbabilityPropertyAccess().getGroup(), "rule__ProbabilityProperty__Group__0");
					put(grammarAccess.getModelAccess().getPropertiesAssignment(), "rule__Model__PropertiesAssignment");
					put(grammarAccess.getListAccess().getElemsAssignment_1(), "rule__List__ElemsAssignment_1");
					put(grammarAccess.getStringPropertyAccess().getKeyAssignment_0(), "rule__StringProperty__KeyAssignment_0");
					put(grammarAccess.getStringPropertyAccess().getValueAssignment_2(), "rule__StringProperty__ValueAssignment_2");
					put(grammarAccess.getIdPropertyAccess().getKeyAssignment_0(), "rule__IdProperty__KeyAssignment_0");
					put(grammarAccess.getIdPropertyAccess().getValueAssignment_2(), "rule__IdProperty__ValueAssignment_2");
					put(grammarAccess.getCommandPropertyAccess().getKeyAssignment_0(), "rule__CommandProperty__KeyAssignment_0");
					put(grammarAccess.getCommandPropertyAccess().getValueAssignment_3(), "rule__CommandProperty__ValueAssignment_3");
					put(grammarAccess.getBoolPropertyAccess().getKeyAssignment_0(), "rule__BoolProperty__KeyAssignment_0");
					put(grammarAccess.getBoolPropertyAccess().getValueAssignment_2(), "rule__BoolProperty__ValueAssignment_2");
					put(grammarAccess.getDatePropertyAccess().getKeyAssignment_0(), "rule__DateProperty__KeyAssignment_0");
					put(grammarAccess.getDatePropertyAccess().getValueAssignment_2(), "rule__DateProperty__ValueAssignment_2");
					put(grammarAccess.getIntegerPropertyAccess().getKeyAssignment_0(), "rule__IntegerProperty__KeyAssignment_0");
					put(grammarAccess.getIntegerPropertyAccess().getValueAssignment_2(), "rule__IntegerProperty__ValueAssignment_2");
					put(grammarAccess.getDoublePropertyAccess().getKeyAssignment_0(), "rule__DoubleProperty__KeyAssignment_0");
					put(grammarAccess.getDoublePropertyAccess().getValueAssignment_2(), "rule__DoubleProperty__ValueAssignment_2");
					put(grammarAccess.getHexadecimalPropertyAccess().getKeyAssignment_0(), "rule__HexadecimalProperty__KeyAssignment_0");
					put(grammarAccess.getHexadecimalPropertyAccess().getValueAssignment_2(), "rule__HexadecimalProperty__ValueAssignment_2");
					put(grammarAccess.getListPropertyAccess().getKeyAssignment_0(), "rule__ListProperty__KeyAssignment_0");
					put(grammarAccess.getListPropertyAccess().getValueAssignment_2(), "rule__ListProperty__ValueAssignment_2");
					put(grammarAccess.getIdClausePropertyAccess().getNameAssignment_0(), "rule__IdClauseProperty__NameAssignment_0");
					put(grammarAccess.getIdClausePropertyAccess().getValueAssignment_2(), "rule__IdClauseProperty__ValueAssignment_2");
					put(grammarAccess.getIdClausePropertyAccess().getPropertiesAssignment_3(), "rule__IdClauseProperty__PropertiesAssignment_3");
					put(grammarAccess.getIntClausePropertyAccess().getNameAssignment_0(), "rule__IntClauseProperty__NameAssignment_0");
					put(grammarAccess.getIntClausePropertyAccess().getValueAssignment_2(), "rule__IntClauseProperty__ValueAssignment_2");
					put(grammarAccess.getIntClausePropertyAccess().getPropertiesAssignment_3(), "rule__IntClauseProperty__PropertiesAssignment_3");
					put(grammarAccess.getDateClausePropertyAccess().getNameAssignment_0(), "rule__DateClauseProperty__NameAssignment_0");
					put(grammarAccess.getDateClausePropertyAccess().getValueAssignment_2(), "rule__DateClauseProperty__ValueAssignment_2");
					put(grammarAccess.getDateClausePropertyAccess().getPropertiesAssignment_3(), "rule__DateClauseProperty__PropertiesAssignment_3");
					put(grammarAccess.getProbabilityPropertyAccess().getKeyAssignment_0(), "rule__ProbabilityProperty__KeyAssignment_0");
					put(grammarAccess.getProbabilityPropertyAccess().getValueAssignment_2(), "rule__ProbabilityProperty__ValueAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_SL_COMMENT" };
	}

	public Ck2GrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(Ck2GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
