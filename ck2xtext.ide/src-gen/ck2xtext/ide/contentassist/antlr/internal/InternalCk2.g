/*
 * generated by Xtext 2.9.1
 */
grammar InternalCk2;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package ck2xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package ck2xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import ck2xtext.services.Ck2GrammarAccess;

}
@parser::members {
	private Ck2GrammarAccess grammarAccess;

	public void setGrammarAccess(Ck2GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getModelAccess().getPropertiesAssignment()); }
			(rule__Model__PropertiesAssignment)
			{ after(grammarAccess.getModelAccess().getPropertiesAssignment()); }
		)
		(
			{ before(grammarAccess.getModelAccess().getPropertiesAssignment()); }
			(rule__Model__PropertiesAssignment)*
			{ after(grammarAccess.getModelAccess().getPropertiesAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDate
entryRuleDate
:
{ before(grammarAccess.getDateRule()); }
	 ruleDate
{ after(grammarAccess.getDateRule()); } 
	 EOF 
;

// Rule Date
ruleDate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateAccess().getGroup()); }
		(rule__Date__Group__0)
		{ after(grammarAccess.getDateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDouble
entryRuleDouble
:
{ before(grammarAccess.getDoubleRule()); }
	 ruleDouble
{ after(grammarAccess.getDoubleRule()); } 
	 EOF 
;

// Rule Double
ruleDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoubleAccess().getGroup()); }
		(rule__Double__Group__0)
		{ after(grammarAccess.getDoubleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleList
entryRuleList
:
{ before(grammarAccess.getListRule()); }
	 ruleList
{ after(grammarAccess.getListRule()); } 
	 EOF 
;

// Rule List
ruleList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListAccess().getGroup()); }
		(rule__List__Group__0)
		{ after(grammarAccess.getListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListElem
entryRuleListElem
:
{ before(grammarAccess.getListElemRule()); }
	 ruleListElem
{ after(grammarAccess.getListElemRule()); } 
	 EOF 
;

// Rule ListElem
ruleListElem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListElemAccess().getAlternatives()); }
		(rule__ListElem__Alternatives)
		{ after(grammarAccess.getListElemAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
		(rule__Property__Alternatives)
		{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClause
entryRuleClause
:
{ before(grammarAccess.getClauseRule()); }
	 ruleClause
{ after(grammarAccess.getClauseRule()); } 
	 EOF 
;

// Rule Clause
ruleClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClauseAccess().getAlternatives()); }
		(rule__Clause__Alternatives)
		{ after(grammarAccess.getClauseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringProperty
entryRuleStringProperty
:
{ before(grammarAccess.getStringPropertyRule()); }
	 ruleStringProperty
{ after(grammarAccess.getStringPropertyRule()); } 
	 EOF 
;

// Rule StringProperty
ruleStringProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringPropertyAccess().getGroup()); }
		(rule__StringProperty__Group__0)
		{ after(grammarAccess.getStringPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdProperty
entryRuleIdProperty
:
{ before(grammarAccess.getIdPropertyRule()); }
	 ruleIdProperty
{ after(grammarAccess.getIdPropertyRule()); } 
	 EOF 
;

// Rule IdProperty
ruleIdProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdPropertyAccess().getGroup()); }
		(rule__IdProperty__Group__0)
		{ after(grammarAccess.getIdPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommandProperty
entryRuleCommandProperty
:
{ before(grammarAccess.getCommandPropertyRule()); }
	 ruleCommandProperty
{ after(grammarAccess.getCommandPropertyRule()); } 
	 EOF 
;

// Rule CommandProperty
ruleCommandProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandPropertyAccess().getGroup()); }
		(rule__CommandProperty__Group__0)
		{ after(grammarAccess.getCommandPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolProperty
entryRuleBoolProperty
:
{ before(grammarAccess.getBoolPropertyRule()); }
	 ruleBoolProperty
{ after(grammarAccess.getBoolPropertyRule()); } 
	 EOF 
;

// Rule BoolProperty
ruleBoolProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolPropertyAccess().getGroup()); }
		(rule__BoolProperty__Group__0)
		{ after(grammarAccess.getBoolPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDateProperty
entryRuleDateProperty
:
{ before(grammarAccess.getDatePropertyRule()); }
	 ruleDateProperty
{ after(grammarAccess.getDatePropertyRule()); } 
	 EOF 
;

// Rule DateProperty
ruleDateProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDatePropertyAccess().getGroup()); }
		(rule__DateProperty__Group__0)
		{ after(grammarAccess.getDatePropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericProperty
entryRuleNumericProperty
:
{ before(grammarAccess.getNumericPropertyRule()); }
	 ruleNumericProperty
{ after(grammarAccess.getNumericPropertyRule()); } 
	 EOF 
;

// Rule NumericProperty
ruleNumericProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericPropertyAccess().getGroup()); }
		(rule__NumericProperty__Group__0)
		{ after(grammarAccess.getNumericPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListProperty
entryRuleListProperty
:
{ before(grammarAccess.getListPropertyRule()); }
	 ruleListProperty
{ after(grammarAccess.getListPropertyRule()); } 
	 EOF 
;

// Rule ListProperty
ruleListProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListPropertyAccess().getGroup()); }
		(rule__ListProperty__Group__0)
		{ after(grammarAccess.getListPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdClauseProperty
entryRuleIdClauseProperty
:
{ before(grammarAccess.getIdClausePropertyRule()); }
	 ruleIdClauseProperty
{ after(grammarAccess.getIdClausePropertyRule()); } 
	 EOF 
;

// Rule IdClauseProperty
ruleIdClauseProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdClausePropertyAccess().getGroup()); }
		(rule__IdClauseProperty__Group__0)
		{ after(grammarAccess.getIdClausePropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntClauseProperty
entryRuleIntClauseProperty
:
{ before(grammarAccess.getIntClausePropertyRule()); }
	 ruleIntClauseProperty
{ after(grammarAccess.getIntClausePropertyRule()); } 
	 EOF 
;

// Rule IntClauseProperty
ruleIntClauseProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntClausePropertyAccess().getGroup()); }
		(rule__IntClauseProperty__Group__0)
		{ after(grammarAccess.getIntClausePropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDateClauseProperty
entryRuleDateClauseProperty
:
{ before(grammarAccess.getDateClausePropertyRule()); }
	 ruleDateClauseProperty
{ after(grammarAccess.getDateClausePropertyRule()); } 
	 EOF 
;

// Rule DateClauseProperty
ruleDateClauseProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateClausePropertyAccess().getGroup()); }
		(rule__DateClauseProperty__Group__0)
		{ after(grammarAccess.getDateClausePropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProbabilityProperty
entryRuleProbabilityProperty
:
{ before(grammarAccess.getProbabilityPropertyRule()); }
	 ruleProbabilityProperty
{ after(grammarAccess.getProbabilityPropertyRule()); } 
	 EOF 
;

// Rule ProbabilityProperty
ruleProbabilityProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProbabilityPropertyAccess().getGroup()); }
		(rule__ProbabilityProperty__Group__0)
		{ after(grammarAccess.getProbabilityPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoubleAccess().getHyphenMinusKeyword_0_0()); }
		'-'
		{ after(grammarAccess.getDoubleAccess().getHyphenMinusKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDoubleAccess().getPlusSignKeyword_0_1()); }
		'+'
		{ after(grammarAccess.getDoubleAccess().getPlusSignKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListElem__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListElemAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getListElemAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getListElemAccess().getSTRINGTerminalRuleCall_1()); }
		RULE_STRING
		{ after(grammarAccess.getListElemAccess().getSTRINGTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getListElemAccess().getDoubleParserRuleCall_2()); }
		ruleDouble
		{ after(grammarAccess.getListElemAccess().getDoubleParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getStringPropertyParserRuleCall_0()); }
		ruleStringProperty
		{ after(grammarAccess.getPropertyAccess().getStringPropertyParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getIdPropertyParserRuleCall_1()); }
		ruleIdProperty
		{ after(grammarAccess.getPropertyAccess().getIdPropertyParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getCommandPropertyParserRuleCall_2()); }
		ruleCommandProperty
		{ after(grammarAccess.getPropertyAccess().getCommandPropertyParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getBoolPropertyParserRuleCall_3()); }
		ruleBoolProperty
		{ after(grammarAccess.getPropertyAccess().getBoolPropertyParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getDatePropertyParserRuleCall_4()); }
		ruleDateProperty
		{ after(grammarAccess.getPropertyAccess().getDatePropertyParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getNumericPropertyParserRuleCall_5()); }
		ruleNumericProperty
		{ after(grammarAccess.getPropertyAccess().getNumericPropertyParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getListPropertyParserRuleCall_6()); }
		ruleListProperty
		{ after(grammarAccess.getPropertyAccess().getListPropertyParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getClauseParserRuleCall_7()); }
		ruleClause
		{ after(grammarAccess.getPropertyAccess().getClauseParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getProbabilityPropertyParserRuleCall_8()); }
		ruleProbabilityProperty
		{ after(grammarAccess.getPropertyAccess().getProbabilityPropertyParserRuleCall_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClauseAccess().getIdClausePropertyParserRuleCall_0()); }
		ruleIdClauseProperty
		{ after(grammarAccess.getClauseAccess().getIdClausePropertyParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getIntClausePropertyParserRuleCall_1()); }
		ruleIntClauseProperty
		{ after(grammarAccess.getClauseAccess().getIntClausePropertyParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getDateClausePropertyParserRuleCall_2()); }
		ruleDateClauseProperty
		{ after(grammarAccess.getClauseAccess().getDateClausePropertyParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__0__Impl
	rule__Date__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__1__Impl
	rule__Date__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getDateAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__2__Impl
	rule__Date__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__3__Impl
	rule__Date__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getFullStopKeyword_3()); }
	'.'
	{ after(grammarAccess.getDateAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); }
	RULE_INT
	{ after(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Double__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Double__Group__0__Impl
	rule__Double__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleAccess().getAlternatives_0()); }
	(rule__Double__Alternatives_0)?
	{ after(grammarAccess.getDoubleAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Double__Group__1__Impl
	rule__Double__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Double__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleAccess().getGroup_2()); }
	(rule__Double__Group_2__0)?
	{ after(grammarAccess.getDoubleAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Double__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Double__Group_2__0__Impl
	rule__Double__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getDoubleAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Double__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
	{ after(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__List__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__List__Group__0__Impl
	rule__List__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getListAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__List__Group__1__Impl
	rule__List__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getListAccess().getElemsAssignment_1()); }
		(rule__List__ElemsAssignment_1)
		{ after(grammarAccess.getListAccess().getElemsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getListAccess().getElemsAssignment_1()); }
		(rule__List__ElemsAssignment_1)*
		{ after(grammarAccess.getListAccess().getElemsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__List__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getListAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringProperty__Group__0__Impl
	rule__StringProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringPropertyAccess().getKeyAssignment_0()); }
	(rule__StringProperty__KeyAssignment_0)
	{ after(grammarAccess.getStringPropertyAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringProperty__Group__1__Impl
	rule__StringProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringPropertyAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getStringPropertyAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringPropertyAccess().getValueAssignment_2()); }
	(rule__StringProperty__ValueAssignment_2)
	{ after(grammarAccess.getStringPropertyAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdProperty__Group__0__Impl
	rule__IdProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdPropertyAccess().getKeyAssignment_0()); }
	(rule__IdProperty__KeyAssignment_0)
	{ after(grammarAccess.getIdPropertyAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdProperty__Group__1__Impl
	rule__IdProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdPropertyAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getIdPropertyAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdPropertyAccess().getValueAssignment_2()); }
	(rule__IdProperty__ValueAssignment_2)
	{ after(grammarAccess.getIdPropertyAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommandProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandProperty__Group__0__Impl
	rule__CommandProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandPropertyAccess().getKeyAssignment_0()); }
	(rule__CommandProperty__KeyAssignment_0)
	{ after(grammarAccess.getCommandPropertyAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandProperty__Group__1__Impl
	rule__CommandProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandPropertyAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getCommandPropertyAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandProperty__Group__2__Impl
	rule__CommandProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandPropertyAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getCommandPropertyAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandProperty__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandProperty__Group__3__Impl
	rule__CommandProperty__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandProperty__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandPropertyAccess().getValueAssignment_3()); }
	(rule__CommandProperty__ValueAssignment_3)
	{ after(grammarAccess.getCommandPropertyAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandProperty__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandProperty__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandProperty__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandPropertyAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getCommandPropertyAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolProperty__Group__0__Impl
	rule__BoolProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolPropertyAccess().getKeyAssignment_0()); }
	(rule__BoolProperty__KeyAssignment_0)
	{ after(grammarAccess.getBoolPropertyAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolProperty__Group__1__Impl
	rule__BoolProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolPropertyAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getBoolPropertyAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolPropertyAccess().getValueAssignment_2()); }
	(rule__BoolProperty__ValueAssignment_2)
	{ after(grammarAccess.getBoolPropertyAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateProperty__Group__0__Impl
	rule__DateProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatePropertyAccess().getKeyAssignment_0()); }
	(rule__DateProperty__KeyAssignment_0)
	{ after(grammarAccess.getDatePropertyAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateProperty__Group__1__Impl
	rule__DateProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatePropertyAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getDatePropertyAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatePropertyAccess().getValueAssignment_2()); }
	(rule__DateProperty__ValueAssignment_2)
	{ after(grammarAccess.getDatePropertyAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericProperty__Group__0__Impl
	rule__NumericProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericPropertyAccess().getKeyAssignment_0()); }
	(rule__NumericProperty__KeyAssignment_0)
	{ after(grammarAccess.getNumericPropertyAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericProperty__Group__1__Impl
	rule__NumericProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericPropertyAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getNumericPropertyAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericPropertyAccess().getValueAssignment_2()); }
	(rule__NumericProperty__ValueAssignment_2)
	{ after(grammarAccess.getNumericPropertyAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListProperty__Group__0__Impl
	rule__ListProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListPropertyAccess().getKeyAssignment_0()); }
	(rule__ListProperty__KeyAssignment_0)
	{ after(grammarAccess.getListPropertyAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListProperty__Group__1__Impl
	rule__ListProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListPropertyAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getListPropertyAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListPropertyAccess().getValueAssignment_2()); }
	(rule__ListProperty__ValueAssignment_2)
	{ after(grammarAccess.getListPropertyAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdClauseProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdClauseProperty__Group__0__Impl
	rule__IdClauseProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdClauseProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdClausePropertyAccess().getNameAssignment_0()); }
	(rule__IdClauseProperty__NameAssignment_0)
	{ after(grammarAccess.getIdClausePropertyAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdClauseProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdClauseProperty__Group__1__Impl
	rule__IdClauseProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdClauseProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdClausePropertyAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getIdClausePropertyAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdClauseProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdClauseProperty__Group__2__Impl
	rule__IdClauseProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IdClauseProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdClausePropertyAccess().getValueAssignment_2()); }
	(rule__IdClauseProperty__ValueAssignment_2)
	{ after(grammarAccess.getIdClausePropertyAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdClauseProperty__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdClauseProperty__Group__3__Impl
	rule__IdClauseProperty__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IdClauseProperty__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdClausePropertyAccess().getPropertiesAssignment_3()); }
	(rule__IdClauseProperty__PropertiesAssignment_3)*
	{ after(grammarAccess.getIdClausePropertyAccess().getPropertiesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdClauseProperty__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdClauseProperty__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdClauseProperty__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdClausePropertyAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getIdClausePropertyAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntClauseProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntClauseProperty__Group__0__Impl
	rule__IntClauseProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntClauseProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntClausePropertyAccess().getNameAssignment_0()); }
	(rule__IntClauseProperty__NameAssignment_0)
	{ after(grammarAccess.getIntClausePropertyAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntClauseProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntClauseProperty__Group__1__Impl
	rule__IntClauseProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntClauseProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntClausePropertyAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getIntClausePropertyAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntClauseProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntClauseProperty__Group__2__Impl
	rule__IntClauseProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntClauseProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntClausePropertyAccess().getValueAssignment_2()); }
	(rule__IntClauseProperty__ValueAssignment_2)
	{ after(grammarAccess.getIntClausePropertyAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntClauseProperty__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntClauseProperty__Group__3__Impl
	rule__IntClauseProperty__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntClauseProperty__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntClausePropertyAccess().getPropertiesAssignment_3()); }
	(rule__IntClauseProperty__PropertiesAssignment_3)*
	{ after(grammarAccess.getIntClausePropertyAccess().getPropertiesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntClauseProperty__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntClauseProperty__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntClauseProperty__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntClausePropertyAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getIntClausePropertyAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateClauseProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateClauseProperty__Group__0__Impl
	rule__DateClauseProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateClauseProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateClausePropertyAccess().getNameAssignment_0()); }
	(rule__DateClauseProperty__NameAssignment_0)
	{ after(grammarAccess.getDateClausePropertyAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateClauseProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateClauseProperty__Group__1__Impl
	rule__DateClauseProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DateClauseProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateClausePropertyAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getDateClausePropertyAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateClauseProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateClauseProperty__Group__2__Impl
	rule__DateClauseProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DateClauseProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateClausePropertyAccess().getValueAssignment_2()); }
	(rule__DateClauseProperty__ValueAssignment_2)
	{ after(grammarAccess.getDateClausePropertyAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateClauseProperty__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateClauseProperty__Group__3__Impl
	rule__DateClauseProperty__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DateClauseProperty__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateClausePropertyAccess().getPropertiesAssignment_3()); }
	(rule__DateClauseProperty__PropertiesAssignment_3)*
	{ after(grammarAccess.getDateClausePropertyAccess().getPropertiesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateClauseProperty__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateClauseProperty__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateClauseProperty__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateClausePropertyAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getDateClausePropertyAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProbabilityProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilityProperty__Group__0__Impl
	rule__ProbabilityProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilityProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilityPropertyAccess().getKeyAssignment_0()); }
	(rule__ProbabilityProperty__KeyAssignment_0)
	{ after(grammarAccess.getProbabilityPropertyAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilityProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilityProperty__Group__1__Impl
	rule__ProbabilityProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilityProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilityPropertyAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getProbabilityPropertyAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilityProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilityProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilityProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilityPropertyAccess().getValueAssignment_2()); }
	(rule__ProbabilityProperty__ValueAssignment_2)
	{ after(grammarAccess.getProbabilityPropertyAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__PropertiesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPropertiesPropertyParserRuleCall_0()); }
		ruleProperty
		{ after(grammarAccess.getModelAccess().getPropertiesPropertyParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__List__ElemsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListAccess().getElemsListElemParserRuleCall_1_0()); }
		ruleListElem
		{ after(grammarAccess.getListAccess().getElemsListElemParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperty__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringPropertyAccess().getKeyIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getStringPropertyAccess().getKeyIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperty__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringPropertyAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringPropertyAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdProperty__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdPropertyAccess().getKeyIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getIdPropertyAccess().getKeyIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdProperty__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdPropertyAccess().getValueIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getIdPropertyAccess().getValueIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandProperty__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandPropertyAccess().getKeyIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getCommandPropertyAccess().getKeyIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandProperty__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandPropertyAccess().getValueIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getCommandPropertyAccess().getValueIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolProperty__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolPropertyAccess().getKeyIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBoolPropertyAccess().getKeyIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolProperty__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolPropertyAccess().getValueBOOLTerminalRuleCall_2_0()); }
		RULE_BOOL
		{ after(grammarAccess.getBoolPropertyAccess().getValueBOOLTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateProperty__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatePropertyAccess().getKeyIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getDatePropertyAccess().getKeyIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateProperty__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatePropertyAccess().getValueDateParserRuleCall_2_0()); }
		ruleDate
		{ after(grammarAccess.getDatePropertyAccess().getValueDateParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericProperty__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericPropertyAccess().getKeyIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getNumericPropertyAccess().getKeyIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericProperty__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericPropertyAccess().getValueDoubleParserRuleCall_2_0()); }
		ruleDouble
		{ after(grammarAccess.getNumericPropertyAccess().getValueDoubleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListPropertyAccess().getKeyIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getListPropertyAccess().getKeyIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListProperty__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListPropertyAccess().getValueListParserRuleCall_2_0()); }
		ruleList
		{ after(grammarAccess.getListPropertyAccess().getValueListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdClauseProperty__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdClausePropertyAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getIdClausePropertyAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdClauseProperty__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdClausePropertyAccess().getValueLeftCurlyBracketKeyword_2_0()); }
		(
			{ before(grammarAccess.getIdClausePropertyAccess().getValueLeftCurlyBracketKeyword_2_0()); }
			'{'
			{ after(grammarAccess.getIdClausePropertyAccess().getValueLeftCurlyBracketKeyword_2_0()); }
		)
		{ after(grammarAccess.getIdClausePropertyAccess().getValueLeftCurlyBracketKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdClauseProperty__PropertiesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdClausePropertyAccess().getPropertiesPropertyParserRuleCall_3_0()); }
		ruleProperty
		{ after(grammarAccess.getIdClausePropertyAccess().getPropertiesPropertyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntClauseProperty__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntClausePropertyAccess().getNameINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getIntClausePropertyAccess().getNameINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntClauseProperty__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntClausePropertyAccess().getValueLeftCurlyBracketKeyword_2_0()); }
		(
			{ before(grammarAccess.getIntClausePropertyAccess().getValueLeftCurlyBracketKeyword_2_0()); }
			'{'
			{ after(grammarAccess.getIntClausePropertyAccess().getValueLeftCurlyBracketKeyword_2_0()); }
		)
		{ after(grammarAccess.getIntClausePropertyAccess().getValueLeftCurlyBracketKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntClauseProperty__PropertiesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntClausePropertyAccess().getPropertiesPropertyParserRuleCall_3_0()); }
		ruleProperty
		{ after(grammarAccess.getIntClausePropertyAccess().getPropertiesPropertyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateClauseProperty__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateClausePropertyAccess().getNameDateParserRuleCall_0_0()); }
		ruleDate
		{ after(grammarAccess.getDateClausePropertyAccess().getNameDateParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateClauseProperty__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateClausePropertyAccess().getValueLeftCurlyBracketKeyword_2_0()); }
		(
			{ before(grammarAccess.getDateClausePropertyAccess().getValueLeftCurlyBracketKeyword_2_0()); }
			'{'
			{ after(grammarAccess.getDateClausePropertyAccess().getValueLeftCurlyBracketKeyword_2_0()); }
		)
		{ after(grammarAccess.getDateClausePropertyAccess().getValueLeftCurlyBracketKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateClauseProperty__PropertiesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateClausePropertyAccess().getPropertiesPropertyParserRuleCall_3_0()); }
		ruleProperty
		{ after(grammarAccess.getDateClausePropertyAccess().getPropertiesPropertyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilityProperty__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbabilityPropertyAccess().getKeyINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getProbabilityPropertyAccess().getKeyINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilityProperty__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbabilityPropertyAccess().getValueListElemParserRuleCall_2_0()); }
		ruleListElem
		{ after(grammarAccess.getProbabilityPropertyAccess().getValueListElemParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

fragment RULE_DIGIT : '0'..'9';

RULE_BOOL : ('yes'|'no');

RULE_INT : RULE_DIGIT+;

fragment RULE_NON_ASCII_CAP : ('\u00C0'|'\u00C1'|'\u00C2'|'\u00C3'|'\u00C4'|'\u00C5'|'\u00C6'|'\u00C7'|'\u00C8'|'\u00C9'|'\u00CA'|'\u00CB'|'\u00CC'|'\u00CD'|'\u00CE'|'\u00CF'|'\u00D0'|'\u00D1'|'\u00D2'|'\u00D3'|'\u00D4'|'\u00D5'|'\u00D6'|'\u00D8'|'\u0160'|'\u00D9'|'\u00DA'|'\u00DB'|'\u00DC'|'\u00DD'|'\u0178'|'\u00DE'|'\u00DF'|'\u0152');

fragment RULE_NON_ASCII_LOW : ('\u00E0'|'\u00E1'|'\u00E2'|'\u00E3'|'\u00E4'|'\u00E5'|'\u00E6'|'\u00E7'|'\u00E8'|'\u00E9'|'\u00EA'|'\u00EB'|'\u00EC'|'\u00ED'|'\u00EE'|'\u00EF'|'\u00F0'|'\u00F1'|'\u00F2'|'\u00F3'|'\u00F4'|'\u00F5'|'\u00F6'|'\u00F8'|'\u0161'|'\u00F9'|'\u00FA'|'\u00FB'|'\u00FC'|'\u00FD'|'\u00FF'|'\u017E'|'\u00FE'|'\u0153');

fragment RULE_ID_PART : ('a'..'z'|'A'..'Z'|RULE_NON_ASCII_LOW|RULE_NON_ASCII_CAP|'<');

RULE_ID : '^'? RULE_ID_PART (RULE_ID_PART|RULE_DIGIT|'_'|'-'|'\''|'\u2019'|':'|'.'|'>')*;

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
